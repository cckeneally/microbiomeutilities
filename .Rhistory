taxs <- taxa(x)[apply(abundances(x), 2, which.max)]
out_dat <- data.frame(sample_id = names(sams),
dominant_taxa = taxs)
meta_dat <- meta(x)
meta_dat$sample_id <- rownames(meta_dat)
meta_dat <- meta_dat %>%
left_join(out_dat)
if(is.null(group)){
df <-  meta_dat %>%
group_by(dominant_taxa) %>% tally() %>%
mutate(rel.freq = round(100 * n/sum(n), 1),
rel.freq.pct = paste0(round(100 * n/sum(n), 0), "%")) %>%
arrange(desc(n))
} else {
group <- sym(group)
#dominant_taxa <-"dominant_taxa"
df <-  meta_dat %>%
group_by(!! group, dominant_taxa) %>% tally() %>%
mutate(rel.freq = round(100 * n/sum(n), 1),
rel.freq.pct = paste0(round(100 * n/sum(n), 0), "%")) %>%
arrange(desc(n))
}
return(list(dominant_overview = df, all_data=meta_dat))
}
x.d <- dominant_taxa(p0,level = "Genus", group="DiseaseState")
x.d
dominant_taxa <- function (x, level = NULL, group=NULL) {
if (!is.null(level)) {
x <- aggregate_taxa(x, level = level)
}
sams <- apply(abundances(x), 2, which.max)
taxs <- taxa(x)[apply(abundances(x), 2, which.max)]
out_dat <- data.frame(sample_id = names(sams),
dominant_taxa = taxs)
meta_dat <- meta(x)
meta_dat$sample_id <- rownames(meta_dat)
meta_dat <- meta_dat %>%
left_join(out_dat)
if(is.null(group)){
df <-  meta_dat %>%
group_by(dominant_taxa) %>% tally() %>%
mutate(rel.freq = round(100 * n/sum(n), 1),
rel.freq.pct = paste0(round(100 * n/sum(n), 0), "%")) %>%
arrange(desc(n))
} else {
group <- sym(group)
#dominant_taxa <-"dominant_taxa"
df <-  meta_dat %>%
group_by(!! group, dominant_taxa) %>% tally() %>%
mutate(rel.freq = round(100 * n/sum(n), 1),
rel.freq.pct = paste0(round(100 * n/sum(n), 0), "%")) %>%
arrange(desc(n))
}
return(list(dominant_overview = df, all_data=meta_dat))
}
library(microbiomeutilities)
data("zackular2014")
p0 <- zackular2014
p0.gen <- aggregate_taxa(p0,"Genus")
x.d <- dominant_taxa(p0,level = "Genus", group="DiseaseState")
head(x.d$dominant_overview)
?sym
roxygen2::roxygenize()
roxygen2::roxygenize()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(microbiomeutilities)
library(dplyr)
data("zackular2014")
p0 <- zackular2014
p0.gen <- aggregate_taxa(p0,"Genus")
x.d <- dominant_taxa(p0,level = "Genus", group="DiseaseState")
head(x.d$dominant_overview)
DT::datatable(x.d$dominant_overview)
46+21+7+7+7+4+4+4
library(microbiomeutilities)
library(dplyr)
data("zackular2014")
p0 <- zackular2014
p0.gen <- aggregate_taxa(p0,"Genus")
x.d <- dominant_taxa(p0,level = "Genus", group="DiseaseState")
head(x.d$dominant_overview)
roxygen2::roxygenize()
roxygen2::roxygenize()
devtools::check()
pkgdown::build_site()
library(microbiomeutilities)
data("zackular2014")
p0 <- zackular2014
p0.rel <- microbiome::transform(p0, "compositional")
tx.sum1 <- taxa_summary(p0, "Phylum")
tx.sum2 <- taxa_summary(p0.rel, "Phylum")
tx.sum2
tx.sum1
tx.sum1 <- taxa_summary(p0, "Phylum")
tx.sum1
get_tax_table <- function(x, level.tax,group){
group <- sym(group)
ps.lev <- aggregate_taxa(x, level = level.tax)
phy_tab <- phy_to_ldf(ps.lev, transform.counts = NULL) %>%
group_by(!! group, unique) %>%
summarise(mean_abun = mean(abundance),
sd_abun = sd(abundance))
return(phy_tab)
}
get_tax_table <- function(x, level, group){
group <- sym(group)
ps.lev <- aggregate_taxa(x, level = level.tax)
phy_tab <- phy_to_ldf(ps.lev, transform.counts = NULL) %>%
group_by(!! group, unique) %>%
summarise(mean_abun = mean(abundance),
sd_abun = sd(abundance))
return(phy_tab)
}
get_tax_table(ps,level = "Genus", group="DiseaseState")
get_tax_table <- function(x, level, group){
group <- sym(group)
ps.lev <- aggregate_taxa(x, level = level)
phy_tab <- phy_to_ldf(ps.lev, transform.counts = NULL) %>%
group_by(!! group, unique) %>%
summarise(mean_abun = mean(abundance),
sd_abun = sd(abundance))
return(phy_tab)
}
get_tax_table(ps,level = "Genus", group="DiseaseState")
get_tax_table(p0, level = "Genus", group="DiseaseState")
get_tax_table <- function(x, level, group){
group <- sym(group)
ps.lev <- aggregate_taxa(x, level = level)
phy_tab <- phy_to_ldf(ps.lev, transform.counts = NULL) %>%
group_by(!! group, unique) %>%
summarise(mean_abundance = mean(Abundance),
sd_abundance = sd(Abundance))
return(phy_tab)
}
get_tax_table(p0, level = "Genus", group="DiseaseState")
get_group_abundances <- function(x, level, group){
group <- sym(group)
ps.lev <- aggregate_taxa(x, level = level)
phy_tab <- phy_to_ldf(ps.lev, transform.counts = NULL) %>%
group_by(!! group, unique) %>%
summarise(mean_abundance = mean(Abundance),
sd_abundance = sd(Abundance))
return(phy_tab)
}
get_group_abundances(p0, level = "Genus", group="DiseaseState")
get_group_abundances(p0, level = "Phylum", group="DiseaseState")
get_group_abundances <- function(x, level, group){
group <- sym(group)
ps.lev <- aggregate_taxa(x, level = level)
phy_tab <- phy_to_ldf(ps.lev, transform.counts = NULL) %>%
group_by(!! group, unique) %>%
summarise(mean_abundance = mean(Abundance),
sd_abundance = sd(Abundance))
return(phy_tab)
}
get_group_abundances <- function(x, level, group, transform="compositional"){
group <- sym(group)
ps.lev <- aggregate_taxa(x, level = level)
phy_tab <- phy_to_ldf(ps.lev, transform.counts = transform) %>%
group_by(!! group, unique) %>%
summarise(mean_abundance = mean(Abundance),
sd_abundance = sd(Abundance))
return(phy_tab)
}
get_group_abundances(p0, level = "Phylum", group="DiseaseState")
dominant
get_group_abundances <- function(x, level, group, transform="compositional"){
group <- sym(group)
if (!is.null(level)) {
x <- aggregate_taxa(x, level = level)
}
phy_tab <- phy_to_ldf(x, transform.counts = transform) %>%
group_by(!! group, unique) %>%
summarise(mean_abundance = mean(Abundance, na.rm = T),
sd_abundance = sd(Abundance, na.rm = T))
return(phy_tab)
}
get_group_abundances(p0, level = "Phylum", group="DiseaseState")
get_group_abundances(p0, level = NULL, group="DiseaseState")
xf <- phy_to_ldf(p0)
xf <- phy_to_ldf(p0, transform.counts = NULL)
head(xf)
p0.gen <- aggregate_taxa(p0,"Genus")
xf <- phy_to_ldf(p0.gen, transform.counts = NULL)
head(xf)
#' @return A list of two data frames/tibbles
#' @examples
#' library(microbiomeutilities)
#' library(dplyr)
#' data("zackular2014")
#' p0 <- zackular2014
#' get_group_abundances(p0, level = "Phylum", group="DiseaseState")
#' @export
#' @keywords utilities
#'
get_group_abundances <- function(x, level, group, transform="compositional"){
group <- sym(group)
if (!is.null(level)) {
x <- aggregate_taxa(x, level = level)
}
phy_tab <- phy_to_ldf(x, transform.counts = transform) %>%
group_by(!! group, OTUID) %>%
summarise(mean_abundance = mean(Abundance, na.rm = T),
sd_abundance = sd(Abundance, na.rm = T))
return(phy_tab)
}
library(microbiomeutilities)
data("zackular2014")
p0 <- zackular2014
get_group_abundances(p0, level = "Phylum", group="DiseaseState")
hx <- get_group_abundances(p0, level = "Phylum", group="DiseaseState")
class(hx)
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
devtools::check()
pkgdown::build_site()
library(microbiomeutilities)
library(microbiomeutilities)
library(ggpubr)
data("zackular2014")
pseq <- zackular2014
# check healthy
health_ps <- subset_samples(pseq, DiseaseState=="H")
library(ggridges)
x <- pseq
tax_table(x)[,colnames(tax_table(x))] <- gsub(tax_table(x)[,colnames(tax_table(x))],
pattern="[a-z]__",replacement="")
taxasums <- taxatable <- tax_plot1 <- NULL
color.level="Phylum"
tax_table(x)[tax_table(x)[,color.level]=="",color.level] <- "Unclassified"
taxasums <- rowSums(abundances(x))
taxatable <- as.data.frame.matrix(tax_table(x))
tax_plot1 <- ggplot(taxatable, aes(x = taxasums,
color = taxatable[,color.level])) +
geom_line(size = 0.5, stat = "density") +
xlab(paste0(color.level, " Counts")) +
scale_x_log10() +
scale_color_manual(color.level, values = color.taxa) +
theme_biome_utils()
color.taxa=brewer.pal(12,"Paired")
library(RColorBrewer)
tax_plot1 <- ggplot(taxatable, aes(x = taxasums,
color = taxatable[,color.level])) +
geom_line(size = 0.5, stat = "density") +
xlab(paste0(color.level, " Counts")) +
scale_x_log10() +
scale_color_manual(color.level, values = color.taxa) +
theme_biome_utils()
color.taxa=brewer.pal(12,"Paired")
tax_plot1 <- ggplot(taxatable, aes(x = taxasums,
color = taxatable[,color.level])) +
geom_line(size = 0.5, stat = "density") +
xlab(paste0(color.level, " Counts")) +
scale_x_log10() +
scale_color_manual(color.level, values = color.taxa) +
theme_biome_utils()
tax_plot1
ggplot(taxatable, aes(x = taxasums, y = taxatable[,color.level])) + geom_density_ridges(scale = 0.9)
ggplot(taxatable, aes(x = taxasums, y = taxatable[,color.level])) +
geom_density_ridges(scale = 0.5)
ggplot(taxatable, aes(x = taxasums, y = taxatable[,color.level])) +
geom_density_ridges(scale = 0.9)
ggplot(taxatable, aes(x = taxasums, y = taxatable[,color.level])) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01)
ggplot(taxatable, aes(x = taxasums, y = taxatable[,color.level])) +
geom_density_ridges_gradient(scale = 0.2, rel_min_height = 0.01)
ggplot(taxatable, aes(x = taxasums, y = taxatable[,color.level])) +
geom_density_ridges_gradient(scale = 0.9, rel_min_height = 0.01)
ggplot(taxatable, aes(x = taxasums, y = taxatable[,color.level],fill = stat(x)))) +
geom_density_ridges_gradient(scale = 0.9, rel_min_height = 0.01)
ggplot(taxatable, aes(x = taxasums, y = taxatable[,color.level],fill = stat(x)))) +
geom_density_ridges_gradient(scale = 0.9, rel_min_height = 0.01)
ggplot(taxatable, aes(x = taxasums, y = taxatable[,color.level],fill = stat(taxasums)))) +
geom_density_ridges_gradient(scale = 0.9, rel_min_height = 0.01)
ggplot(taxatable, aes(x = taxasums, y = taxatable[,color.level])) +
geom_density_ridges_gradient(scale = 0.9, rel_min_height = 0.01)
ggplot(taxatable, aes(x = taxasums, y = taxatable[,color.level])) +
geom_density_ridges_gradient(jittered_points = TRUE,
position = position_points_jitter(width = 0.05, height = 0),
point_shape = '|', point_size = 3, point_alpha = 1, alpha = 0.7)
xdf <- phy_to_ldf(x, transform.counts = "compositional")
library(jeevanuDB)
library(microbiomeutilities)
library(dplyr)
pseq <- moving_pictures
taxa_names(pseq) <- gsub("g__", "", taxa_names(pseq))
b <- "UBERON:feces" # Selected body site
# Let us pick a subset
pseq <- subset_samples(pseq, body_site == b)
sample_data(pseq)$time <- as.numeric(as.character(sample_data(pseq)$days_since_experiment_start))
# Rename variables
sample_data(pseq)$subject <- sample_data(pseq)$host_subject_id
sample_data(pseq)$sample <- sample_data(pseq)$X.SampleID
pseq.g <- aggregate_rare(pseq,"Genus", 0.001, 0.9)
pseq.g
xdf <- phy_to_ldf(pseq.g, transform.counts = NULL)
head(xdf)
pseq <- microbiome::transform(pseq, "compositional")
pseq.g <- aggregate_rare(pseq,"Genus", 0.001, 0.9)
xdf <- phy_to_ldf(pseq.g, transform.counts = NULL)
pseq.g
xdf <- phy_to_ldf(pseq.g, transform.counts = NULL)
ggplot(xdf) +
geom_area(aes(x=time,
ymin=0,
y=Abundance,
group=Phylum,
fill=cut(Abundance,c(seq(0,1,100),Inf)))
,alpha=0.5,
stat="smooth", fullrange=T,n=1,
colour="white",
size=0.25,alpha=0.5)
head(xdf)
ggplot(xdf) +
geom_area(aes(x=time,
ymin=0,
y=Abundance,
group=Genus,
fill=cut(Abundance,c(seq(0,1,100),Inf)))
,alpha=0.5,
stat="smooth", fullrange=T,n=1,
colour="white",
size=0.25,alpha=0.5)
ggplot(xdf) +
geom_area(aes(x=time,
ymin=0,
y=Abundance,
group=Genus,
fill=cut(Abundance,c(seq(0,1,100),Inf))),
alpha=0.5,
stat="smooth", fullrange=T,n=1,
colour="white",
size=0.25,alpha=0.5, na.rm = TRUE)
ggplot(xdf) +
geom_area(aes(x=time,
ymin=0,
y=Abundance,
group=Genus,
fill=cut(Abundance,c(seq(0,1,0.01),Inf))),
alpha=0.5,
stat="smooth", fullrange=T,n=1,
colour="white",
size=0.25,alpha=0.5, na.rm = TRUE)
ggplot(xdf) +
geom_area(aes(x=time,
ymin=0,
y=Abundance,
group=Genus,
fill=cut(Abundance,c(seq(0,1,0.01),Inf))),
alpha=0.5,
stat="smooth", fullrange=T,n=1,
colour="white",
size=0.25, na.rm = TRUE)
ggplot(xdf) +
geom_area(aes(x=time,
y=Abundance,
group=Genus,
fill=cut(Abundance,c(seq(0,1,0.01),Inf))),
alpha=0.5,
stat="smooth", fullrange=T,n=1,
colour="white",
size=0.25, na.rm = TRUE)
seq(0,1,0.01)
cut(Abundance,c(seq(0,1,0.001),Inf))
xdf[1:3,1:10]
ggplot(xdf) +
geom_area(aes(x=time,
y=Abundance,
group=Genus,
fill=cut(Abundance,c(seq(0,1,0.001),Inf))),
alpha=0.5,
stat="smooth", fullrange=T,n=1,
colour="white",
size=0.25, na.rm = TRUE)
ggplot(xdf) +
geom_area(aes(x=time,
y=Abundance,
group=Genus,
fill=cut(Abundance,c(seq(0,1,0.001),Inf))),
alpha=0.5,
stat="smooth", fullrange=T,n=1,
colour="white",
size=0.25, na.rm = TRUE) + scale_fill_brewer(palette="RdPu",name="Gross\nEUR (M)")
head(xdf$Abundance)
max(xdf$Abundance)
min(xdf$Abundance)
ggplot(xdf) +
geom_area(aes(x=time,
y=Abundance,
group=Genus,
fill=cut(Abundance,c(seq(0,1,0.00001),Inf))),
alpha=0.5,
stat="smooth", fullrange=T,n=0.4,
colour="white",
size=0.25, na.rm = TRUE) + scale_fill_brewer(palette="RdPu",name="Gross\nEUR (M)")
ggplot(xdf) +
geom_area(aes(x=time,
y=Abundance,
group=Genus,
fill=cut(Abundance,c(seq(0,1,0.00001),Inf))),
alpha=0.5,
stat="smooth", fullrange=T,
colour="white",
size=0.25, na.rm = TRUE) + scale_fill_brewer(palette="RdPu",name="Gross\nEUR (M)")
ggplot(xdf) +
geom_area(aes(x=time,
y=Abundance,
group=Genus,
fill=cut(Abundance,c(seq(0,1,0.00001),Inf))),
alpha=0.5,
stat="lm", fullrange=T,
colour="white",
size=0.25, na.rm = TRUE) +
scale_fill_brewer(palette="RdPu",name="Gross\nEUR (M)")
ggplot(xdf) +
geom_area(aes(x=time,
y=Abundance,
group=Genus,
fill=cut(Abundance,c(seq(0,1,0.00001),Inf))),
alpha=0.5,
stat="smooth", fullrange=T,
colour="white",
size=0.25, na.rm = TRUE) +
scale_fill_brewer(palette="RdPu",name="Gross\nEUR (M)")
ggplot(xdf) +
geom_area(aes(x=time,
y=Abundance,
group=Genus,
color=cut(Abundance,c(seq(0,1,0.00001),Inf))),
alpha=0.5,
stat="smooth", fullrange=T,
colour="white",
size=0.25, na.rm = TRUE) +
scale_color_brewer(palette="RdPu",name="Gross\nEUR (M)")
ggplot(xdf) +
geom_area(aes(x=time,
y=Abundance,
group=Genus,
color= Genus,
fill=cut(Abundance,c(seq(0,1,0.00001),Inf))),
alpha=0.5,
stat="smooth", fullrange=T,
colour="white",
size=0.25, na.rm = TRUE) +
scale_fill_brewer(palette="RdPu",name="Gross\nEUR (M)") +
scale_color_brewer(palette="RdPu",name="Gross\nEUR (M)")
ggplot(xdf) +
geom_area(aes(x=time,
y=Abundance,
group=Genus,
color= Genus,
fill=cut(Abundance,c(seq(0,1,0.00001),Inf))),
alpha=0.5,
stat="smooth", fullrange=T,
#colour="white",
size=0.25, na.rm = TRUE) +
scale_fill_brewer(palette="RdPu",name="Gross\nEUR (M)") +
scale_color_brewer(palette="RdPu",name="Gross\nEUR (M)")
ggplot(xdf) +
geom_area(aes(x=time,
y=Abundance,
group=Genus,
color= Genus,
fill=cut(Abundance,c(seq(0,1,0.00001),Inf))),
alpha=0.5,
stat="smooth", fullrange=T,
#colour="white",
size=0.25, na.rm = TRUE) +
scale_fill_brewer(palette="RdPu",name="Gross\nEUR (M)")
#' @title Custom theme for microbiomeutilities pkg
#' @description Opiniated elegant theme.
#' @export
#' @keywords utilities
theme_biome_utils <- function(){
theme_bw() +
theme(#axis.text = element_text(size = 16),
#axis.title = element_text(size = 18),
axis.line.x = element_line(color="grey70"),
axis.line.y = element_line(color="grey70"),
#panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "grey70", size = 1),
strip.background = element_rect(fill="white"),
legend.key = element_blank(),
legend.background = element_rect(colour = NA, fill = NA))
}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
p <- plot_alpha_diversities(ps0,
type = "dominance",
index.val = "all",
plot.type = "stripchart",
variableA = "DiseaseState",
palette = mycols)
library(microbiome)
data("zackular2014")
ps0 <- zackular2014
mycols <- c("brown3", "steelblue","grey50")
p <- plot_alpha_diversities(ps0,
type = "dominance",
index.val = "all",
plot.type = "stripchart",
variableA = "DiseaseState",
palette = mycols)
print(p)
