x <- p0
grp_tib <- get_tibble(x, slot= "sam_data", column_id="SampleID")
grp_tib
#sample_data(x)$group_var <- sample_data(x)[,group]
grp_tib <- get_tibble(x, slot= "sam_data", column_id="SampleID")[,group]
grp_tib
#sample_data(x)$group_var <- sample_data(x)[,group]
grp_tib <- unique(get_tibble(x, slot= "sam_data", column_id="SampleID")[,group])
grp_tib
#sample_data(x)$group_var <- sample_data(x)[,group]
grp_tib <- list(unique(get_tibble(x, slot= "sam_data", column_id="SampleID")[,group]))
grp_tib
#sample_data(x)$group_var <- sample_data(x)[,group]
grp_tib <- c(unique(get_tibble(x, slot= "sam_data", column_id="SampleID")[,group]))
grp_tib
#sample_data(x)$group_var <- sample_data(x)[,group]
grp_tib <- as.character(unique(get_tibble(x, slot= "sam_data", column_id="SampleID")[,group]))
grp_tib
?as.data.frame
get_tibble <- function(x,
slot="otu_table",
column_id="column_id") {
if (class(x)!="phyloseq"){
stop("Input is not an object of phyloseq class")
}
if(isFALSE(any(slot==getslots.phyloseq(x)))) {
stop("slot must be one of 'otu_table', 'sam_data', 'tax_table'")
}
if(slot=="otu_table"){
tib_dat <- abundances(x) %>%
as.data.frame(stringsAsFactors=FALSE) %>%
rownames_to_column(column_id) %>%
as_tibble()
return(tib_dat)
} else if(slot=="sam_data"){
tib_dat <- meta(x) %>%
as.data.frame(stringsAsFactors=FALSE) %>%
rownames_to_column(column_id) %>%
as_tibble()
return(tib_dat)
} else if(slot=="tax_table"){
tib_dat <- tax_table(x) %>%
as("matrix") %>%
as.data.frame(stringsAsFactors=FALSE) %>%
rownames_to_column(column_id) %>%
as_tibble()
return(tib_dat)
}
}
#sample_data(x)$group_var <- sample_data(x)[,group]
grp_tib <- unique(get_tibble(x, slot= "sam_data", column_id="SampleID")[,group])
grp_tib
grp_tib[1]
make_pairs
get_tibble(x, slot= "sam_data", column_id="SampleID")[,group]
class(get_tibble(x, slot= "sam_data", column_id="SampleID")[,group])
#sample_data(x)$group_var <- sample_data(x)[,group]
grp_tib <- unique(meta(x)[,group])
grp_tib
#sample_data(x)$group_var <- sample_data(x)[,group]
grp_tib <- unique(as.character(meta(x)[,group]))
grp_tib
tx <- NULL
for (g in grp_tib){
ps.sb <- subset_samples(x, group_var == g)
tax_pruned <- core_members(ps.sb, detection = abund.thres, prevalence = prev.thres)
tx <- c(tx, tax_pruned)
}
sample_data(x)$group_var <- sample_data(x)[,group]
grp_tib <- unique(as.character(meta(x)[,group]))
tx <- NULL
for (g in grp_tib){
ps.sb <- subset_samples(x, group_var == g)
tax_pruned <- core_members(ps.sb, detection = abund.thres, prevalence = prev.thres)
tx <- c(tx, tax_pruned)
}
tx
length(tx)
x
union(tx)
tx <- NULL
for (g in grp_tib){
ps.sb <- subset_samples(x, group_var == g)
tax_pruned <- core_members(ps.sb, detection = abund.thres, prevalence = prev.thres)
tx <- union(c(tx, tax_pruned))
}
for (g in grp_tib){
ps.sb <- subset_samples(x, group_var == g)
tax_pruned <- core_members(ps.sb, detection = abund.thres, prevalence = prev.thres)
tx <- union(tx, c(tx, tax_pruned))
}
length(tx)
abund.thres=50
tx <- NULL
for (g in grp_tib){
ps.sb <- subset_samples(x, group_var == g)
tax_pruned <- core_members(ps.sb, detection = abund.thres, prevalence = prev.thres)
tx <- union(tx, c(tx, tax_pruned))
}
length(tx)
level= "Genus"
taxa= "g__Bacteroides"
ps0.gen <- aggregate_taxa(x,level = level)
group= "DiseaseState"
?get_group_abundances
get_gb <- get_group_abundances(x,level = level,group=group, transform = "compositional")
group
x <- NULL
x <- P0
x <- p0
get_gb <- get_group_abundances(x,level = level,group=group, transform = "compositional")
get_gb
tx <- subset_taxa(x, level==taxa)
tx <- get_tibble(x, slot = "tax_table", "ID") %>%
filter(!!lev==taxa)
lev <- sym(level)
tx <- get_tibble(x, slot = "tax_table", "ID") %>%
filter(!!lev==taxa)
tx
head(tx)
unique(tx$Genus)
dim(tx)
length(unique(tx$ID))
n_otu <- paste0("No. of OTUs/ASVs within ", level, " ", taxa, " : " nrow(tx))
paste0("No. of OTUs/ASVs within ", level, " ", taxa, " - " nrow(tx))
level
paste0("No. of OTUs/ASVs within ", level, " ", taxa, " is ", nrow(tx))
sample_data(ps0.gen)$group_var <- meta(ps0.gen)[,group]
grps <- unique(as.character(meta(ps0.gen)$group_var))
grps
prev <- prevalence(pm)
ls.pr <- NULL
for (g in grps){
pm <- subset_samples(ps0.gen, group_var == g)
prev <- prevalence(pm)
ls.pr[g] <- ls.pr
}
ls.pr
ls.pr <- NULL
for (g in grps){
pm <- subset_samples(ps0.gen, group_var == g)
prev <- prevalence(pm)
ls.pr[g] <- prev
}
ls.pr <- NULL
for (g in grps){
pm <- subset_samples(ps0.gen, group_var == g)
prev <- prevalence(pm)
ls.pr[[g] <- prev
}
}
beta_df <- compare_distances(ps,
dist.matrix=ps.dist,
method="mean",
group="DiseaseState",
na.rm=TRUE,
type="all")
ggplot(beta_df,
aes(comparison, mean.distance)) +
geom_boxplot()+ geom_point() +
theme_biome_utils() +
theme(axis.text.x = element_text(angle=90))
dist_between <- dist_melt %>%
left_join(ps.meta,
by = c("S2" = "Var2"),
suffix = c("_1", "_2")) %>%
filter(group_var_1 != group_var_2) %>%
mutate(comparison= paste0(group_var_1, " vs ", group_var_2)) %>%
group_by(S2, comparison) %>%
summarise(between.mean.dist=mean(value))
ggplot(dist_between,
aes(comparison, between.mean.dist)) +
geom_boxplot() + geom_point() +
theme(axis.text.x = element_text(angle=90))
head(dist_between)
table(dist_between$S2)
head(dist_between)
head(dist_within)
ls.pr <- NULL
for (g in grps){
pm <- subset_samples(ps0.gen, group_var == g)
prev <- prevalence(pm)
ls.pr[[g] <- prev
}
}
beta_df <- compare_distances(ps,
dist.matrix=ps.dist,
method="mean",
group="DiseaseState",
na.rm=TRUE,
type="all")
ggplot(beta_df,
aes(comparison, mean.distance)) +
geom_boxplot()+ geom_point() +
theme_biome_utils() +
theme(axis.text.x = element_text(angle=90))
dist_between <- dist_melt %>%
left_join(ps.meta,
by = c("S2" = "Var2"),
suffix = c("_1", "_2")) %>%
filter(group_var_1 != group_var_2) %>%
mutate(comparison= paste0(group_var_1, " vs ", group_var_2)) %>%
group_by(S2, comparison) %>%
summarise(between.mean.dist=mean(value))
ggplot(dist_between,
aes(comparison, between.mean.dist)) +
geom_boxplot() + geom_point() +
theme(axis.text.x = element_text(angle=90))
head(dist_between)
table(dist_between$S2)
head(dist_between)
head(dist_within)
ls.pr <- NULL
for (g in grps){
pm <- subset_samples(ps0.gen, group_var == g)
prev <- prevalence(pm)
ls.pr[[g]] <- prev
}
ls.pr
prev <- names(prev)==taxa
prev
prev <- names(prev)[taxa]
prev
taxa
names(prev)
prev <- prevalence(pm)
names(prev)[taxa]
names(prev)
names(prev)[taxa]
which(names(prev)==taxa)
prev <- prevalence(pm)
loc <- which(names(prev)==taxa)
prev[loc]
head(prev)
prev[5:30]
ls.pr <- NULL
for (g in grps){
pm <- subset_samples(ps0.gen, group_var == g)
prev <- prevalence(pm)
loc <- which(names(prev)==taxa)
ls.pr[[g]] <- prev[loc]
}
ls.pr
ls.pr <- NULL
for (g in grps){
pm <- subset_samples(ps0.gen, group_var == g)
prev <- prevalence(pm)
loc <- which(names(prev)=="g__Porphyromonas")
ls.pr[[g]] <- prev[loc]
}
ls.pr
ls.pr.d <- as.data.frame(ls.pr)
ls.pr.d
ls.pr.d <- t(as.data.frame(ls.pr))
ls.pr.d
colnames(ls.pr.d) <- "Prevalence"
ls.pr.d
ls.pr <- NULL
for (g in grps){
pm <- subset_samples(ps0.gen, group_var == g)
prev <- prevalence(pm)
loc <- which(names(prev)==taxa)
ls.pr[[g]] <- prev[loc]*100
}
ls.pr.d <- t(as.data.frame(ls.pr))
colnames(ls.pr.d) <- "Prevalence"
ls.pr.d
colnames(ls.pr.d) <- "Prevalence (%)"
ls.pr.d
bac_dom <- find_samples_taxa(ps0.gen, taxa = "g__Bacteroides")
bac_dom
bac_dom <- length(find_samples_taxa(ps0.gen, taxa = "g__Bacteroides"))
bac_dom
ls.pr <- NULL
for (g in grps){
pm <- subset_samples(ps0.gen, group_var == g)
prev <- prevalence(pm)
loc <- which(names(prev)==taxa)
ls.pr[[g]] <- prev[loc]*100
ndom[[g]] <- length(find_samples_taxa(pm, taxa = "g__Bacteroides"))
}
ls.pr <- NULL
ndom <- NULL
for (g in grps){
pm <- subset_samples(ps0.gen, group_var == g)
prev <- prevalence(pm)
loc <- which(names(prev)==taxa)
ls.pr[[g]] <- prev[loc]*100
ndom[[g]] <- length(find_samples_taxa(pm, taxa = "g__Bacteroides"))
}
ndom
colnames(ndom) <- "nsamples dominated"
ndom.d <- t(as.data.frame(ndom))
colnames(ndom.d) <- "nsamples dominated"
ndom.d
colnames(ndom.d) <- "Dominates"
ndom.d
ls.pr.d <- cbind(ls.pr.d, ndom.d)
ls.pr.d
get_gb
get_gb_s <- subset(get_gb, OTUID==taxa)
get_gb_s
ls.pr.d <- cbind(ls.pr.d, ndom.d,get_gb_s)
ls.pr.d
ls.pr.d <- cbind(ls.pr.d, ndom.d)
ls.pr.d
ls.pr.d <- t(as.data.frame(ls.pr))
colnames(ls.pr.d) <- "Prevalence (%)"
ndom.d <- t(as.data.frame(ndom))
colnames(ndom.d) <- "Dominates"
ls.pr.d <- cbind(ls.pr.d, ndom.d)
ls.pr.d
ls.pr.d <- cbind(ls.pr.d, ndom.d) %>% rownames_to_column("Group")
ls.pr.d <- t(as.data.frame(ls.pr))
colnames(ls.pr.d) <- "Prevalence (%)"
ndom.d <- t(as.data.frame(ndom))
colnames(ndom.d) <- "Dominates"
ls.pr.d <- cbind(ls.pr.d, ndom.d) %>% rownames_to_column("Group")
ls.pr.d <- t(as.data.frame(ls.pr))
colnames(ls.pr.d) <- "Prevalence (%)"
ndom.d <- t(as.data.frame(ndom))
colnames(ndom.d) <- "Dominates"
ls.pr.d <- cbind(ls.pr.d, ndom.d) %>%
as.data.frame() %>%
rownames_to_column("Group")
ls.pr.d
get_gb_s
ls.pr.d <- cbind(ls.pr.d, ndom.d) %>%
as.data.frame() %>%
rownames_to_column(group)
ls.pr.d <- t(as.data.frame(ls.pr))
colnames(ls.pr.d) <- "Prevalence (%)"
ndom.d <- t(as.data.frame(ndom))
colnames(ndom.d) <- "Dominates"
ls.pr.d <- cbind(ls.pr.d, ndom.d) %>%
as.data.frame() %>%
rownames_to_column(group)
get_gb_s <- subset(get_gb, OTUID==taxa) %>%
left_join(ls.pr.d)
get_gb_s
ggplot(get_gb_s, aes_string(group,mean_abundance)) +
geom_point(aes(size=sd_abundance))
ggplot(get_gb_s, aes_string(group,"mean_abundance")) +
geom_point(aes(size=sd_abundance))
ggplot(get_gb_s, aes_string(group,"mean_abundance")) +
geom_point(aes(size=sd_abundance), fill=NA)
ggplot(get_gb_s, aes_string(group,"mean_abundance")) +
geom_point(aes(size=sd_abundance), color=NA)
ggplot(get_gb_s, aes_string(group,"mean_abundance")) +
geom_point(aes(size=sd_abundance), color="grey70")
ggplot(get_gb_s, aes_string(group,"mean_abundance")) +
geom_point(aes(size=sd_abundance), color="grey70") +
theme_biome_utils()
ggplot(get_gb_s, aes_string(group,"mean_abundance")) +
geom_point(size=2, color="grey70") +
theme_biome_utils()
ggplot(get_gb_s, aes_string(group,"mean_abundance")) +
geom_point(size=5, color="grey70") +
theme_biome_utils()
ggplot(get_gb_s, aes_string(group,"mean_abundance")) +
geom_point(size=5, color="grey70") +
theme_biome_utils() +
geom_errorbar(aes(ymin=mean_abundance-sd_abundance, ymax=mean_abundance+sd_abundance))
p <- plot_listed_taxa(x,select.taxa = taxa, group = group)
p <- plot_listed_taxa(ps0.gen,select.taxa = taxa, group = group)
p
mycols <- c("brown3", "steelblue","grey50")
p <- plot_listed_taxa(ps0.gen,select.taxa = taxa, group = group, group.colors = mycols)
p
p <- plot_listed_taxa(ps0.gen,select.taxa = taxa, group = group,
group.colors = mycols) + coord_flip()
p
p.pr <- ggplot(get_gb_s, aes_string(group, "Dominates")) + geom_col()
p.pr
p.pr <- ggplot(get_gb_s, aes_string("Dominates",group)) + geom_col()
p.pr
p.pr <- ggplot(get_gb_s, aes_string("Dominates",group)) +
geom_col() + theme_biome_utils()
library(patchwork)
p + p.pr
p.pr <- ggplot(get_gb_s, aes_string("Dominates",group)) +
geom_col() + theme_biome_utils() +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank())
p + p.pr
p.pr <- ggplot(get_gb_s, aes_string("Dominates",group)) +
geom_col() + theme_biome_utils() +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank())
p + p.pr
p <- plot_listed_taxa(ps0.gen,select.taxa = taxa, group = group,
group.colors = mycols) + coord_flip()+
theme(strip.background = element_blank())
p.pr <- ggplot(get_gb_s, aes_string("Dominates",group)) +
geom_col() + theme_biome_utils() +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank())
p + p.pr
p.pr <- ggplot(get_gb_s, aes_string("Dominates",group)) +
geom_col(width = 0.5) + theme_biome_utils() +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank())
p + p.pr
p <- plot_listed_taxa(ps0.gen,select.taxa = taxa, group = group,
group.colors = mycols) + coord_flip()+
theme(strip.background = element_blank())
p.pr <- ggplot(get_gb_s, aes_string("Dominates",group)) +
geom_col(width = 0.5) + theme_biome_utils() +
scale_fill_manual(values = mycols) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank())
p + p.pr
p <- plot_listed_taxa(ps0.gen,select.taxa = taxa, group = group,
group.colors = mycols) + coord_flip()+
theme(strip.background = element_blank())
p.pr <- ggplot(get_gb_s, aes_string("Dominates",group)) +
geom_col(width = 0.5, aes_string(fill=group)) + theme_biome_utils() +
scale_fill_manual(values = mycols) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank())
p + p.pr
p + p.pr + plot_layout(widths = c(2,1))
p <- plot_listed_taxa(ps0.gen,select.taxa = taxa, group = group,
group.colors = mycols) + coord_flip()+
theme(strip.background = element_blank(),
strip.text = element_blank())
p.pr <- ggplot(get_gb_s, aes_string("Dominates",group)) +
geom_col(width = 0.5, aes_string(fill=group)) +
theme_biome_utils() +
scale_fill_manual(values = mycols) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p + p.pr + plot_layout(widths = c(2,1))
p <- plot_listed_taxa(ps0.gen,select.taxa = taxa, group = group,
group.colors = mycols) + coord_flip()+
theme(strip.background = element_blank())
p.pr <- ggplot(get_gb_s, aes_string("Dominates",group)) +
geom_col(width = 0.5, aes_string(fill=group)) +
theme_biome_utils() +
scale_fill_manual(values = mycols) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p + p.pr + plot_layout(widths = c(2,1))
get_gb_s
p.pr <- ggplot(get_gb_s, aes_string("`Prevalence (%)`",group)) +
geom_col(width = 0.5, aes_string(fill=group)) +
theme_biome_utils() +
scale_fill_manual(values = mycols) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p.pr
p <- plot_listed_taxa(ps0.gen,select.taxa = taxa, group = group,
group.colors = mycols) + coord_flip()+
theme(strip.background = element_blank())
p.dom <- ggplot(get_gb_s, aes_string("Dominates",group)) +
geom_col(width = 0.5, aes_string(fill=group)) +
theme_biome_utils() +
scale_fill_manual(values = mycols) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p.pr <- ggplot(get_gb_s, aes_string("`Prevalence (%)`",group)) +
geom_col(width = 0.5, aes_string(fill=group)) +
theme_biome_utils() +
scale_fill_manual(values = mycols) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p + p.dom + p.pr + plot_layout(widths = c(2,1,1))
p + p.dom + p.pr + plot_layout(widths = c(2,1,1), guides = "collect")
p.pr <- ggplot(get_gb_s, aes_string("`Prevalence (%)`",group)) +
geom_point(aes_string(fill=group)) +
theme_biome_utils() +
scale_fill_manual(values = mycols) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p + p.dom + p.pr + plot_layout(widths = c(2,1,1), guides = "collect")
p.pr <- ggplot(get_gb_s, aes_string("`Prevalence (%)`",group)) +
geom_point(aes_string(size= "`Prevalence (%)`",fill=group)) +
theme_biome_utils() +
scale_fill_manual(values = mycols) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p + p.dom + p.pr + plot_layout(widths = c(2,1,1), guides = "collect")
p.pr <- ggplot(get_gb_s, aes_string("`Prevalence (%)`",group)) +
geom_point(aes_string(size= "`Prevalence (%)`",color=group)) +
theme_biome_utils() +
scale_fill_manual(values = mycols) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p + p.dom + p.pr + plot_layout(widths = c(2,1,1), guides = "collect")
p + p.dom + p.pr + plot_layout(widths = c(2,1,1), guides = "collect")
p.pr <- ggplot(get_gb_s, aes_string("`Prevalence (%)`",group)) +
geom_col(width = 0.5, aes_string(fill=group)) +
theme_biome_utils() +
scale_fill_manual(values = mycols) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
p + p.dom + p.pr + plot_layout(widths = c(2,1,1), guides = "collect")
roxygen2::roxygenize()
devtools::check()
pkgdown::build_site()
roxygen2::roxygenize()
devtools::check()
pkgdown::build_site()
