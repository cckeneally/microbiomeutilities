if(dist.method %in% c("pearson", "kendall", "spearman")){
abund_tab <- t(abundances(physeq))
matrix_dist <- cor(abund_tab,abund_tab, method= dist.method,use= "na.or.complete")
} else{
matrix_dist <- phyloseq::distance(physeq, dist.method)
}
stab_tab <- reshape2::melt(
as.matrix(matrix_dist),
varnames = c("S1", "S2"),
value.name = "plasticity.value") %>%
mutate_if(is.factor, as.character) %>%
left_join(mdata, by = c("S1" = "sampleids")) %>%
left_join(mdata, by = c("S2" = "sampleids"),suffix = c("_1", "_2")) %>%
filter(S1 != S2) %>%
filter(subject_1 == subject_2) %>%
mutate(subject = subject_1) %>%
dplyr::select(-subject_1, -subject_1) %>%
distinct(subject, .keep_all = TRUE) %>%
mutate(stability = 1-plasticity.value)
return(stab_tab)
}
pseq.rel <- microbiome::transform(pseq, "compositional")
pl <- plasticity(pseq.rel, participant.col="subject")
#' @description This function extends the plot_ordination function of \code{\link{phyloseq}}to highlight the top taxa loadings
#' on the species ordination.
#' @details This function is useful for visualizing specifc taxa that could be important in explaining variations in ordinations.
#' @param x \code{\link{phyloseq-class}} object
#' @param dist.method Any of the methods supported by phyloseq::distance or correlation method cor()
#' @param participant.col Column name with participant IDs
#' @return plot
#' @export
#' @examples
#' library(microbiome)
plasticity <- function(x, dist.method="bray", participant.col){
mdata <- subject <- sampleids <- x1 <- abund_tab <- matrix_dist <-stab_tab <- NULL
subject_2 <- subject_1 <- stability <- plasticity.value  <- NULL
mdata <- meta(x)
mdata$subject <- as.factor(mdata[,participant.col])
mdata$sampleids <- rownames(mdata)
mdata <- mdata %>%
data.frame() %>%
mutate_at(
.funs = as.character,
.vars = c(sampleids, subject)
)
x1 <- prune_taxa(taxa_sums(x) > 0 , x)
if(dist.method %in% c("pearson", "kendall", "spearman")){
abund_tab <- t(abundances(x1))
matrix_dist <- cor(abund_tab,abund_tab, method= dist.method,use= "na.or.complete")
} else{
matrix_dist <- phyloseq::distance(x1, dist.method)
}
stab_tab <- reshape2::melt(
as.matrix(matrix_dist),
varnames = c("S1", "S2"),
value.name = "plasticity.value") %>%
mutate_if(is.factor, as.character) %>%
left_join(mdata, by = c("S1" = "sampleids")) %>%
left_join(mdata, by = c("S2" = "sampleids"),suffix = c("_1", "_2")) %>%
filter(S1 != S2) %>%
filter(subject_1 == subject_2) %>%
mutate(subject = subject_1) %>%
dplyr::select(-subject_1, -subject_1) %>%
distinct(subject, .keep_all = TRUE) %>%
mutate(stability = 1-plasticity.value)
return(stab_tab)
}
pl <- plasticity(pseq.rel, participant.col="subject")
#' @title Plasticity
#' @description This function extends the plot_ordination function of \code{\link{phyloseq}}to highlight the top taxa loadings
#' on the species ordination.
#' @details This function is useful for visualizing specifc taxa that could be important in explaining variations in ordinations.
#' @param x \code{\link{phyloseq-class}} object
#' @param dist.method Any of the methods supported by phyloseq::distance or correlation method cor()
#' @param participant.col Column name with participant IDs
#' @return plot
#' @export
#' @examples
#' library(microbiome)
plasticity <- function(x, dist.method="bray", participant.col){
mdata <- subject <- sampleids <- x1 <- abund_tab <- matrix_dist <-stab_tab <- NULL
subject_2 <- subject_1 <- stability <- plasticity.value  <- NULL
mdata <- meta(x)
mdata$subject <- as.factor(mdata[,participant.col])
mdata$sampleids <- rownames(mdata)
mdata <- mdata %>%
data.frame() %>%
mutate_at(
.funs = as.character,
.vars = c(sampleids, subject)
)
x1 <- prune_taxa(taxa_sums(x) > 0 , x)
if(dist.method %in% c("pearson", "kendall", "spearman")){
abund_tab <- t(abundances(x1))
matrix_dist <- cor(abund_tab,abund_tab, method= dist.method,use= "na.or.complete")
} else{
matrix_dist <- phyloseq::distance(x1, dist.method)
}
stab_tab <- reshape2::melt(
as.matrix(matrix_dist),
varnames = c("S1", "S2"),
value.name = "plasticity.value") %>%
mutate_if(is.factor, as.character) %>%
left_join(mdata, by = c("S1" = "sampleids")) %>%
left_join(mdata, by = c("S2" = "sampleids"),suffix = c("_1", "_2")) %>%
filter(S1 != S2) %>%
filter(subject_1 == subject_2) %>%
mutate(subject = subject_1) %>%
dplyr::select(-subject_1, -subject_1) %>%
distinct(subject, .keep_all = TRUE) %>%
mutate(stability = 1-plasticity.value)
return(stab_tab)
}
pl <- plasticity(pseq.rel, participant.col="subject")
pl
head(pl)
ggplot(pl, aes(plasticity.value, subject)) + geom_col()
ggplot(pl, aes(plasticity.value, subject)) + geom_col(aes(color=group_2))
ggplot(pl, aes(plasticity.value, subject)) + geom_col(aes(fill=group_2))
ggplot(pl, aes(plasticity.value, subject)) + geom_boxplot(aes(fill=group_2))
ggplot(pl, aes(plasticity.value, group_2)) + geom_boxplot(aes(fill=group_2))
ggplot(pl, aes(plasticity.value, group_2)) +
geom_boxplot(aes(fill=group_2)) +
stat_compare_means()
library(ggpubr)
pl <- plasticity(pseq.rel, participant.col="subject")
head(pl)
ggplot(pl, aes(plasticity.value, group_2)) +
geom_boxplot(aes(fill=group_2)) +
stat_compare_means()
ggplot(pl, aes(group_2,plasticity.value)) +
geom_boxplot(aes(fill=group_2)) +
stat_compare_means()
ggplot(pl, aes(group_2,plasticity.value)) +
geom_boxplot(aes(fill=group_2)) +
stat_compare_means() + theme_biome_utils()
library(microbiomeutilities)
ggplot(pl, aes(group_2,plasticity.value)) +
geom_boxplot(aes(fill=group_2)) +
stat_compare_means() + theme_biome_utils()
theme_biome_utils
ggplot(pl, aes(group_2,plasticity.value)) +
geom_boxplot(aes(fill=group_2)) +
stat_compare_means()
#' @title Custom theme for microbiomeutilities pkg
#' @description Opiniated elegant theme.
#' @export
#' @keywords utilities
theme_biome_utils <- function(){
theme_bw() +
theme(#axis.text = element_text(size = 16),
#axis.title = element_text(size = 18),
#axis.line.x = element_line(color="black"),
#axis.line.y = element_line(color="black"),
#panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.spacing = unit(0.7, "line"),
panel.border = element_rect(fill = NA, colour = "grey70", size = 1),
#plot.margin = unit(c(1, 1, 1, 1), units = , "cm"),
#plot.title = element_text(size = 18, vjust = 1, hjust = 0),
#legend.text = element_text(size = 12),
#legend.title = element_blank(),
#legend.position = c(0.95, 0.15),
legend.key = element_blank(),
legend.background = element_rect(colour = NA, fill = NA))
}
ggplot(pl, aes(group_2,plasticity.value)) +
geom_boxplot(aes(fill=group_2)) +
stat_compare_means() + theme_biome_utils()
stat_compare_means() +
theme_biome_utils()
ggplot(pl, aes(group_2,plasticity.value)) +
geom_boxplot(aes(fill=group_2)) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
ggplot(pl, aes(group_2,plasticity.value)) +
geom_boxplot(aes(fill=group_2), alpha=0.5) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
ggplot(pl, aes(group_2,plasticity.value)) +
geom_boxplot(aes(fill=group_2), alpha=0.5) +
geom_jitter(aes(fill=group_2), alpha=0.5) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
ggplot(pl, aes(group_2,plasticity.value)) +
geom_boxplot(aes(fill=group_2), alpha=0.5) +
geom_jitter(aes(color=group_2), alpha=0.5) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
ggplot(pl, aes(group_2,plasticity.value)) +
geom_boxplot(aes(fill=group_2), alpha=0.5) +
geom_jitter(aes(color=group_2), alpha=0.5, size=3) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
scale_color_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
ggplot(pl, aes(group_2,plasticity.value)) +
geom_boxplot(aes(fill=group_2), alpha=0.5, na.rm = TRUE) +
geom_jitter(aes(color=group_2), alpha=0.5, size=3) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
scale_color_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
ggplot(pl, aes(group_2,plasticity.value)) +
geom_boxplot(aes(fill=group_2), alpha=0.5, na.rm = TRUE) +
geom_jitter(aes(color=group_2), alpha=0.5, size=3, na.rm = TRUE) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
scale_color_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
roxygen2::roxygenize()
roxygen2::roxygenize()
#' @title Plasticity
#' @description Calculated difference in microbiota composition for each individual between
#' two timepoints.
#' @details Using a beta diversity metrics or correlation matrix to identify variability in
#' microbiota of an individual. This is useful for instance if one wants to quantiify changes in
#' microbiota before and after a treatment, dietary modulation, antibiotic treatment, etc.
#' @param x \code{\link{phyloseq-class}} object
#' @param dist.method Any of the methods supported by phyloseq::distance or correlation method cor()
#' @param participant.col Column name with participant IDs
#' @return plot
#' @examples
#' library(microbiome)
#' library(microbiomeutilities)
#' library(dplyr)
#' library(ggpubr)
#' data(peerj32)
#' pseq <- peerj32$phyloseq
#' pseq.rel <- microbiome::transform(pseq, "compositional")
#' pl <- plasticity(pseq.rel, participant.col="subject")
#'
#' @references
#' \itemize{
#' \item{}{Grembi, J.A., Nguyen, L.H., Haggerty, T.D. et al. Gut microbiota plasticity is
#' correlated with sustained weight loss on a low-carb or low-fat dietary intervention.
#' Sci Rep 10, 1405 (2020).https://www.nature.com/articles/s41598-020-58000-y
#' }
#' }
#' @export
plasticity <- function(x, dist.method="bray", participant.col){
mdata <- subject <- sampleids <- x1 <- abund_tab <- matrix_dist <-stab_tab <- NULL
subject_2 <- subject_1 <- stability <- plasticity.value  <- NULL
mdata <- meta(x)
mdata$subject <- as.factor(mdata[,participant.col])
mdata$sampleids <- rownames(mdata)
mdata <- mdata %>%
data.frame() %>%
mutate_at(
.funs = as.character,
.vars = c(sampleids, subject)
)
x1 <- prune_taxa(taxa_sums(x) > 0 , x)
if(dist.method %in% c("pearson", "kendall", "spearman")){
abund_tab <- t(abundances(x1))
matrix_dist <- cor(abund_tab,abund_tab, method= dist.method,use= "na.or.complete")
} else{
matrix_dist <- phyloseq::distance(x1, dist.method)
}
stab_tab <- reshape2::melt(
as.matrix(matrix_dist),
varnames = c("S1", "S2"),
value.name = "plasticity.value") %>%
mutate_if(is.factor, as.character) %>%
left_join(mdata, by = c("S1" = "sampleids")) %>%
left_join(mdata, by = c("S2" = "sampleids"),suffix = c("_1", "_2")) %>%
filter(S1 != S2) %>%
filter(subject_1 == subject_2) %>%
mutate(subject = subject_1) %>%
dplyr::select(-subject_1, -subject_2) %>%
distinct(subject, .keep_all = TRUE) %>%
mutate(stability = 1-plasticity.value)
return(stab_tab)
}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
pl <- plasticity(pseq.rel, dist.method = "pearson", participant.col="subject")
library(microbiome)
library(microbiomeutilities)
library(dplyr)
library(ggpubr)
data(peerj32)
pseq <- peerj32$phyloseq
pseq.rel <- microbiome::transform(pseq, "compositional")
pl <- plasticity(pseq.rel, dist.method = "pearson", participant.col="subject")
head(pl)
pl
x1 <- pseq.rel
dist.method = "pearson"
x1 <- pseq.rel
if(dist.method %in% c("pearson", "kendall", "spearman")){
abund_tab <- t(abundances(x1))
matrix_dist <- cor(abund_tab,abund_tab, method= dist.method,use= "na.or.complete")
} else{
matrix_dist <- phyloseq::distance(x1, dist.method)
}
matrix_dist
abund_tab <- abundances(x1)
matrix_dist <- cor(abund_tab,abund_tab, method= dist.method,use= "na.or.complete")
matrix_dist
#' @title Plasticity
#' @description Calculated difference in microbiota composition for each individual between
#' two timepoints.
#' @details Using a beta diversity metrics or correlation matrix to identify variability in
#' microbiota of an individual. This is useful for instance if one wants to quantiify changes in
#' microbiota before and after a treatment, dietary modulation, antibiotic treatment, etc.
#' @param x \code{\link{phyloseq-class}} object
#' @param dist.method Any of the methods supported by phyloseq::distance or correlation method cor()
#' @param participant.col Column name with participant IDs
#' @return plot
#' @examples
#' library(microbiome)
#' library(microbiomeutilities)
#' library(dplyr)
#' library(ggpubr)
#' data(peerj32)
#' pseq <- peerj32$phyloseq
#' pseq.rel <- microbiome::transform(pseq, "compositional")
#' pl <- plasticity(pseq.rel, participant.col="subject")
#'
#' @references
#' \itemize{
#' \item{}{Grembi, J.A., Nguyen, L.H., Haggerty, T.D. et al. Gut microbiota plasticity is
#' correlated with sustained weight loss on a low-carb or low-fat dietary intervention.
#' Sci Rep 10, 1405 (2020).https://www.nature.com/articles/s41598-020-58000-y
#' }
#' }
#' @export
plasticity <- function(x, dist.method="bray", participant.col){
mdata <- subject <- sampleids <- x1 <- abund_tab <- matrix_dist <-stab_tab <- NULL
subject_2 <- subject_1 <- stability <- plasticity.value  <- NULL
mdata <- meta(x)
mdata$subject <- as.factor(mdata[,participant.col])
mdata$sampleids <- rownames(mdata)
mdata <- mdata %>%
data.frame() %>%
mutate_at(
.funs = as.character,
.vars = c(sampleids, subject)
)
x1 <- prune_taxa(taxa_sums(x) > 0 , x)
#dist.method = "pearson"
#x1 <- pseq.rel
if(dist.method %in% c("pearson", "kendall", "spearman")){
abund_tab <- abundances(x1)
matrix_dist <- cor(abund_tab,abund_tab, method= dist.method,use= "na.or.complete")
} else{
matrix_dist <- phyloseq::distance(x1, dist.method)
}
stab_tab <- reshape2::melt(
as.matrix(matrix_dist),
varnames = c("S1", "S2"),
value.name = "plasticity.value") %>%
mutate_if(is.factor, as.character) %>%
left_join(mdata, by = c("S1" = "sampleids")) %>%
left_join(mdata, by = c("S2" = "sampleids"),suffix = c("_1", "_2")) %>%
filter(S1 != S2) %>%
filter(subject_1 == subject_2) %>%
mutate(subject = subject_1) %>%
dplyr::select(-subject_1, -subject_2) %>%
distinct(subject, .keep_all = TRUE) %>%
mutate(stability = 1-plasticity.value)
return(stab_tab)
}
library(microbiome)
library(microbiomeutilities)
library(dplyr)
library(ggpubr)
data(peerj32)
pseq <- peerj32$phyloseq
pseq.rel <- microbiome::transform(pseq, "compositional")
pl <- plasticity(pseq.rel, dist.method = "pearson", participant.col="subject")
head(pl)
#' pl <- plasticity(pseq.rel, participant.col="subject")
#'
#' @references
#' \itemize{
#' \item{}{Grembi, J.A., Nguyen, L.H., Haggerty, T.D. et al. Gut microbiota plasticity is
#' correlated with sustained weight loss on a low-carb or low-fat dietary intervention.
#' Sci Rep 10, 1405 (2020).https://www.nature.com/articles/s41598-020-58000-y
#' }
#' }
#' @export
plasticity <- function(x, dist.method="bray", participant.col){
mdata <- subject <- sampleids <- x1 <- abund_tab <- matrix_dist <-stab_tab <- NULL
subject_2 <- subject_1 <- stability <- plasticity.value  <- NULL
mdata <- meta(x)
mdata$subject <- as.factor(mdata[,participant.col])
mdata$sampleids <- rownames(mdata)
mdata <- mdata %>%
data.frame() %>%
mutate_at(
.funs = as.character,
.vars = c(sampleids, subject)
)
x1 <- prune_taxa(taxa_sums(x) > 0 , x)
#dist.method = "pearson"
#x1 <- pseq.rel
if(dist.method %in% c("pearson", "kendall", "spearman")){
abund_tab <- abundances(x1)
matrix_dist <- cor(abund_tab,abund_tab, method= dist.method,use= "na.or.complete")
} else{
matrix_dist <- phyloseq::distance(x1, dist.method)
}
stab_tab <- reshape2::melt(
as.matrix(matrix_dist),
varnames = c("S1", "S2"),
value.name = dist.method) %>%
mutate_if(is.factor, as.character) %>%
left_join(mdata, by = c("S1" = "sampleids")) %>%
left_join(mdata, by = c("S2" = "sampleids"),suffix = c("_1", "_2")) %>%
filter(S1 != S2) %>%
filter(subject_1 == subject_2) %>%
mutate(subject = subject_1) %>%
dplyr::select(-subject_1, -subject_2) %>%
distinct(subject, .keep_all = TRUE)
return(stab_tab)
}
library(microbiome)
library(microbiomeutilities)
library(dplyr)
library(ggpubr)
data(peerj32)
pseq <- peerj32$phyloseq
pseq.rel <- microbiome::transform(pseq, "compositional")
pl <- plasticity(pseq.rel, participant.col="subject")
head(pl)
ggplot(pl, aes(group_2,bray)) +
geom_boxplot(aes(fill=group_2), alpha=0.5, na.rm = TRUE) +
geom_jitter(aes(color=group_2), alpha=0.5, size=3, na.rm = TRUE) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
scale_color_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
ggplot(pl, aes(group_2,bray)) +
geom_boxplot(aes(fill=group_2),
alpha=0.5,
na.rm = TRUE, width=0.5) +
geom_jitter(aes(color=group_2), alpha=0.5, size=3, na.rm = TRUE) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
scale_color_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
pl <- plasticity(pseq.rel, dist.method = "pearson", participant.col="subject")
head(pl)
ggplot(pl, aes(group_2,bray)) +
geom_boxplot(aes(fill=group_2),
alpha=0.5,
na.rm = TRUE,
width=0.5) +
geom_jitter(aes(color=group_2),
alpha=0.5,
size=3,
na.rm = TRUE) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
scale_color_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
ggplot(pl, aes(group_2,pearson)) +
geom_boxplot(aes(fill=group_2),
alpha=0.5,
na.rm = TRUE,
width=0.5) +
geom_jitter(aes(color=group_2),
alpha=0.5,
size=3,
na.rm = TRUE) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
scale_color_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
ggplot(pl, aes(group_2,bray)) +
geom_boxplot(aes(fill=group_2),
alpha=0.5,
na.rm = TRUE,
width=0.5) +
geom_jitter(aes(color=group_2),
alpha=0.5,
size=3,
na.rm = TRUE) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
scale_color_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
pl <- plasticity(pseq.rel, dist.method = "bray", participant.col="subject")
head(pl)
ggplot(pl, aes(group_2,bray)) +
geom_boxplot(aes(fill=group_2),
alpha=0.5,
na.rm = TRUE,
width=0.5) +
geom_jitter(aes(color=group_2),
alpha=0.5,
size=3,
na.rm = TRUE) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
scale_color_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
roxygen2::roxygenize()
roxygen2::roxygenize()
devtools::check()
roxygen2::roxygenize()
devtools::check()
pkgdown::build_site()
