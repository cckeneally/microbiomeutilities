pkgdown::build_site()
library(microbiome)
library(microbiomeutilities)
library(ggpubr)
data("zackular2014")
p0 <- zackular2014
p0.f <- format_to_besthit(p0)
#top_taxa(p0.f, 5)
select.taxa <- c("d__denovo3:g__Bacteroides", "d__denovo2:g__Bacteroides")
mycols <- c("brown3", "steelblue", "grey50")
p <- plot_listed_taxa(p0.f, select.taxa,
group= "DiseaseState",
group.order = c("H","CRC","nonCRC"),
group.colors = mycols,
add.violin = TRUE,
violin.opacity = 0.3,
dot.opacity = 0.25,
box.opacity = 0.25,
panel.arrange= "grid")
print(p + ylab("Relative abundance") + scale_y_continuous(labels = scales::percent))
p0.f
top_taxa(p0.f, 5)
library(microbiome)
library(microbiomeutilities)
library(ggpubr)
data("zackular2014")
p0 <- zackular2014
p0.f <- format_to_besthit(p0)
#top_taxa(p0.f, 5)
select.taxa <- c("d__denovo1:g__Blautia", "d__denovo3:g__Bacteroides")
mycols <- c("brown3", "steelblue", "grey50")
p <- plot_listed_taxa(p0.f, select.taxa,
group= "DiseaseState",
group.order = c("H","CRC","nonCRC"),
group.colors = mycols,
add.violin = TRUE,
violin.opacity = 0.3,
dot.opacity = 0.25,
box.opacity = 0.25,
panel.arrange= "grid")
print(p + ylab("Relative abundance") + scale_y_continuous(labels = scales::percent))
# If more than two variables
comps <- make_pairs(sample_data(p0.f)$DiseaseState)
print(comps)
p <- p + stat_compare_means(
comparisons = comps,
label = "p.format",
tip.length = 0.05,
method = "wilcox.test")
p + scale_y_continuous(labels = scales::percent)
library(microbiome)
library(microbiomeutilities)
data("zackular2014")
p0 <- zackular2014
p0.f <- aggregate_taxa(p0, "Genus")
top_four <- top_taxa(p0.f, 4)
top_four
mycols <- c("brown3", "steelblue", "grey50")
p <- plot_listed_taxa(p0.f, top_four,
group= "DiseaseState",
group.order = c("H","CRC","nonCRC"),
group.colors = mycols,
add.violin = TRUE,
violin.opacity = 0.3,
dot.opacity = 0.25,
box.opacity = 0.25,
panel.arrange= "wrap")
comps <- make_pairs(sample_data(p0.f)$DiseaseState)
p <- p + stat_compare_means(
comparisons = comps,
label = "p.format",
tip.length = 0.05,
method = "wilcox.test")
print(p + ylab("Relative abundance") + scale_y_continuous(labels = scales::percent))
library(microbiomeutilities)
library(dplyr)
library(ggrepel)
asv_ps <- zackular2014
asv_ps <- microbiome::transform(asv_ps, "compositional")
# Select healthy samples
asv_ps <- subset_samples(asv_ps, DiseaseState=="H")
asv_ps <- core(asv_ps,detection = 0.0001, prevalence = 0.50) # reduce size for example
asv_ps <- format_to_besthit(asv_ps)
set.seed(14285)
p_v <- plot_abund_prev(asv_ps,
label.core = TRUE,
color = "Phylum", # NA or "blue"
mean.abund.thres = 0.01,
mean.prev.thres = 0.99,
dot.opacity = 0.7,
label.size = 3,
label.opacity = 1.0,
nudge.label=-0.15,
bs.iter=9, # increase for actual analysis e.g. 999
size = 20, # increase to match your nsamples(asv_ps)
replace = TRUE,
label.color="#5f0f40")
p_v <- p_v +
geom_vline(xintercept = 0.95, lty="dashed", alpha=0.7) +
geom_hline(yintercept = 0.01,lty="dashed", alpha=0.7) +
scale_color_brewer(palette = "Dark2")
p_v
library(microbiomeutilities)
library(pheatmap)
library(RColorBrewer)
data("zackular2014")
ps0 <- zackular2014
taxa_names(ps0) <- gsub("d__denovo", "OTU:", taxa_names(ps0))
# create a gradient color palette for abundance
grad_ab <- colorRampPalette(c("#faf3dd","#f7d486" ,"#5e6472"))
grad_ab_pal <- grad_ab(10)
# create a gradient color palette for prevalence
gray_grad <- colorRampPalette(c("white", "steelblue"))
gray_grad_cols <- gray_grad(10)
# create a color palette for varaibles of interest
meta_colors <- list(c("positive" = "#FFC857",
"negative" = "#05B083"),
c("CRC" = "steelblue",
"nonCRC" = "grey50",
"H"="brown3"),
gray_grad_cols)
# add labels for pheatmap to detect
names(meta_colors) <- c("FOBT.result", "DiseaseState","Prevalence")
p <- plot_taxa_heatmap(ps0,
subset.top = 25,
VariableA = c("DiseaseState","FOBT.result"),
heatcolors = grad_ab_pal, #rev(brewer.pal(6, "RdPu")),
transformation = "log10",
cluster_rows = T,
cluster_cols = F,
show_colnames = F,
annotation_colors=meta_colors,
annotation_row = p$prevalence)
library(microbiomeutilities)
data("zackular2014")
p0 <- zackular2014
p0.rel <- transform(p0, "compositional")
#heat.cols <- c("#a8dadc","#457b9d", "#1d3557")
# create a gradient color palette for abundance
grad_ab <- colorRampPalette(c("#96d4ca","#d3f3f1", "#7c65a9"))
heat.cols <- grad_ab(10)
simple_heatmap(p0.rel,
group.facet = "DiseaseState",
group.order = NULL,
abund.thres = 0.01,
prev.thres = 0.1,
level = "Genus",
scale.color = "log10",
na.fill = "white",
color.fill = heat.cols,
taxa.arrange=TRUE,
remove.other=TRUE,
panel.arrange="grid",
ncol=NULL,
nrow=NULL)
study <- list_microbiome_data(printtab = FALSE)
knitr::kable(study)
file <- system.file("extdata", "microbiomeHD_ref.txt", package = "microbiomeutilities")
reference <- read.table(file, header = T, sep = "\t")
knitr::kable(reference)
data("zackular2014")
p0 <- zackular2014
# reduce size for example
ps0 <- core(p0, detection = 10, prevalence = 50 / 100)
percent_classified(ps0)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(microbiomeutilities)
library(microbiome)
library(knitr)
library(tibble)
library(dplyr)
data("zackular2014")
ps0 <- zackular2014
ps0
print_ps(ps0)
kable(head(tax_table(ps0)))
data("zackular2014")
p0 <- zackular2014
# reduce size for example
ps0 <- core(p0, detection = 10, prevalence = 20 / 100)
# Add a prefix to taxa labels
ps0.f2 <- format_to_besthit(ps0, prefix = "MyBug-")
kable(head(tax_table(ps0.f2))[3:6])
data("zackular2014")
p0 <- zackular2014
p <- plot_read_distribution(p0, groups = "DiseaseState",
plot.type = "density")
print(p + theme_biome_utils())
data("zackular2014")
p0 <- zackular2014
# reduce size for example
ps0 <- core(p0, detection = 10, prevalence = 20 / 100)
pseq_df <- phy_to_ldf(ps0, transform.counts = NULL)
kable(head(pseq_df))
library(microbiomeutilities)
library(RColorBrewer)
library(patchwork)
library(ggpubr)
data("zackular2014")
pseq <- zackular2014
# check healthy
health_ps <- subset_samples(pseq, DiseaseState=="H")
p_hc <- taxa_distribution(health_ps) +
theme_biome_utils() +
labs(title = "Healthy")
# check CRC
crc_ps <- subset_samples(pseq, DiseaseState=="CRC")
p_crc <- taxa_distribution(crc_ps) +
theme_biome_utils() +
labs(title = "CRC")
# harnessing the power of patchwork
p_hc / p_crc + plot_layout(guides = "collect") +
plot_annotation(tag_levels = "A")
library(microbiomeutilities)
library(dplyr)
data("zackular2014")
p0 <- zackular2014
p0.gen <- aggregate_taxa(p0,"Genus")
x.d <- dominant_taxa(p0,level = "Genus", group="DiseaseState")
head(x.d$dominant_overview)
library(microbiomeutilities)
data("zackular2014")
p0 <- zackular2014
tx.sum1 <- taxa_summary(p0, "Phylum")
tx.sum1
library(microbiomeutilities)
data("zackular2014")
p0 <- zackular2014
grp_abund <- get_group_abundances(p0,
level = "Phylum",
group="DiseaseState",
transform = "compositional")
mycols <- c("brown3", "steelblue","grey50")
# clean names
grp_abund$OTUID <- gsub("p__", "",grp_abund$OTUID)
grp_abund$OTUID <- ifelse(grp_abund$OTUID == "",
"Unclassified", grp_abund$OTUID)
mean.plot <- grp_abund %>% # input data
ggplot(aes(x= reorder(OTUID, mean_abundance), # reroder based on mean abundance
y= mean_abundance,
fill=DiseaseState)) + # x and y axis
geom_bar(     stat = "identity",
position=position_dodge()) +
scale_fill_manual("DiseaseState", values=mycols) + # manually specify colors
theme_bw() + # add a widely used ggplot2 theme
ylab("Mean Relative Abundance") + # label y axis
xlab("Phylum") + # label x axis
coord_flip() # rotate plot
mean.plot
library(microbiomeutilities)
data("zackular2014")
p0 <- zackular2014
p0.f <- aggregate_taxa(p0, "Genus")
bac_dom <- find_samples_taxa(p0.f, taxa = "g__Bacteroides")
bac_dom
#get samples dominated by g__Bacteroides
ps.sub <- prune_samples(sample_names(p0.f) %in% bac_dom, p0.f)
library(microbiomeutilities)
data("zackular2014")
p0 <- zackular2014
# set seed
set.seed(1)
subsamples <- seq(0, 5000, by=100)[-1]
#subsamples = c(10, 5000, 10000, 20000, 30000)
p <- plot_alpha_rcurve(p0, index="observed",
subsamples = subsamples,
lower.conf = 0.025,
upper.conf = 0.975,
group="DiseaseState",
label.color = "brown3",
label.size = 3,
label.min = TRUE)
# change color of line
mycols <- c("brown3", "steelblue","grey50")
p <- p + scale_color_manual(values = mycols) +
scale_fill_manual(values = mycols)
print(p)
library(microbiome)
data("zackular2014")
ps0 <- zackular2014
mycols <- c("brown3", "steelblue","grey50")
p <- plot_alpha_diversities(ps0,
type = "dominance",
index.val = "all",
plot.type = "stripchart",
variableA = "DiseaseState",
palette = mycols)
p <- p + theme_biome_utils() +
ggplot2::theme(legend.position = "top",
text = element_text(size=14))
print(p)
comps <- make_pairs(sample_data(ps0)$DiseaseState)
p <- p + stat_compare_means(
comparisons = comps,
label = "p.format",
tip.length = 0.05,
method = "wilcox.test")
p
library(gghalves)
library(microbiomeutilities)
data("zackular2014")
p0 <- zackular2014
mycols <- c("brown3", "steelblue","grey50")
p.m <- plot_diversity_stats(p0, group = "DiseaseState",
index = "diversity_shannon",
group.order = c("H", "CRC", "nonCRC"),
group.colors = mycols,
label.format="p.format",
stats = TRUE)
p.m + ylab("Shannon Diversity") + xlab("")
library(microbiome)
library(microbiomeutilities)
library(dplyr)
data("zackular2014")
p0 <- zackular2014
tern_df <- prep_ternary(p0, group="DiseaseState",
abund.thres=0.000001, level= "Genus", prev.thres=0.01)
head(tern_df)
library(microbiomeutilities)
library(RColorBrewer)
data("zackular2014")
ps0 <- zackular2014
mycols <- c("brown3", "steelblue", "grey50")
pn <- plot_taxa_boxplot(ps0,
taxonomic.level = "Family",
top.otu = 3,
group = "DiseaseState",
add.violin= FALSE,
title = "Top three family",
keep.other = FALSE,
group.order = c("H","CRC","nonCRC"),
group.colors = mycols,
dot.size = 1)
print(pn + theme_biome_utils())
library(microbiome)
library(microbiomeutilities)
library(ggpubr)
data("zackular2014")
p0 <- zackular2014
p0.f <- format_to_besthit(p0)
#top_taxa(p0.f, 5)
select.taxa <- c("d__denovo1:g__Blautia", "d__denovo3:g__Bacteroides")
mycols <- c("brown3", "steelblue", "grey50")
p <- plot_listed_taxa(p0.f, select.taxa,
group= "DiseaseState",
group.order = c("H","CRC","nonCRC"),
group.colors = mycols,
add.violin = TRUE,
violin.opacity = 0.3,
dot.opacity = 0.25,
box.opacity = 0.25,
panel.arrange= "grid")
print(p + ylab("Relative abundance") + scale_y_continuous(labels = scales::percent))
# If more than two variables
comps <- make_pairs(sample_data(p0.f)$DiseaseState)
print(comps)
p <- p + stat_compare_means(
comparisons = comps,
label = "p.format",
tip.length = 0.05,
method = "wilcox.test")
p + scale_y_continuous(labels = scales::percent)
library(microbiome)
library(microbiomeutilities)
data("zackular2014")
p0 <- zackular2014
p0.f <- aggregate_taxa(p0, "Genus")
top_four <- top_taxa(p0.f, 4)
top_four
mycols <- c("brown3", "steelblue", "grey50")
p <- plot_listed_taxa(p0.f, top_four,
group= "DiseaseState",
group.order = c("H","CRC","nonCRC"),
group.colors = mycols,
add.violin = TRUE,
violin.opacity = 0.3,
dot.opacity = 0.25,
box.opacity = 0.25,
panel.arrange= "wrap")
comps <- make_pairs(sample_data(p0.f)$DiseaseState)
p <- p + stat_compare_means(
comparisons = comps,
label = "p.format",
tip.length = 0.05,
method = "wilcox.test")
print(p + ylab("Relative abundance") + scale_y_continuous(labels = scales::percent))
library(microbiomeutilities)
library(dplyr)
library(ggrepel)
asv_ps <- zackular2014
asv_ps <- microbiome::transform(asv_ps, "compositional")
# Select healthy samples
asv_ps <- subset_samples(asv_ps, DiseaseState=="H")
asv_ps <- core(asv_ps,detection = 0.0001, prevalence = 0.50) # reduce size for example
asv_ps <- format_to_besthit(asv_ps)
set.seed(14285)
p_v <- plot_abund_prev(asv_ps,
label.core = TRUE,
color = "Phylum", # NA or "blue"
mean.abund.thres = 0.01,
mean.prev.thres = 0.99,
dot.opacity = 0.7,
label.size = 3,
label.opacity = 1.0,
nudge.label=-0.15,
bs.iter=9, # increase for actual analysis e.g. 999
size = 20, # increase to match your nsamples(asv_ps)
replace = TRUE,
label.color="#5f0f40")
p_v <- p_v +
geom_vline(xintercept = 0.95, lty="dashed", alpha=0.7) +
geom_hline(yintercept = 0.01,lty="dashed", alpha=0.7) +
scale_color_brewer(palette = "Dark2")
p_v
library(microbiomeutilities)
library(pheatmap)
library(RColorBrewer)
data("zackular2014")
ps0 <- zackular2014
taxa_names(ps0) <- gsub("d__denovo", "OTU:", taxa_names(ps0))
# create a gradient color palette for abundance
grad_ab <- colorRampPalette(c("#faf3dd","#f7d486" ,"#5e6472"))
grad_ab_pal <- grad_ab(10)
# create a gradient color palette for prevalence
gray_grad <- colorRampPalette(c("white", "steelblue"))
gray_grad_cols <- gray_grad(10)
# create a color palette for varaibles of interest
meta_colors <- list(c("positive" = "#FFC857",
"negative" = "#05B083"),
c("CRC" = "steelblue",
"nonCRC" = "grey50",
"H"="brown3"),
gray_grad_cols)
# add labels for pheatmap to detect
names(meta_colors) <- c("FOBT.result", "DiseaseState","Prevalence")
p <- plot_taxa_heatmap(ps0,
subset.top = 25,
VariableA = c("DiseaseState","FOBT.result"),
heatcolors = grad_ab_pal, #rev(brewer.pal(6, "RdPu")),
transformation = "log10",
cluster_rows = T,
cluster_cols = F,
show_colnames = F,
annotation_colors=meta_colors,
annotation_row = p$prevalence)
library(microbiomeutilities)
data("zackular2014")
p0 <- zackular2014
p0.rel <- transform(p0, "compositional")
#heat.cols <- c("#a8dadc","#457b9d", "#1d3557")
# create a gradient color palette for abundance
grad_ab <- colorRampPalette(c("#96d4ca","#d3f3f1", "#7c65a9"))
heat.cols <- grad_ab(10)
simple_heatmap(p0.rel,
group.facet = "DiseaseState",
group.order = NULL,
abund.thres = 0.01,
prev.thres = 0.1,
level = "Genus",
scale.color = "log10",
na.fill = "white",
color.fill = heat.cols,
taxa.arrange=TRUE,
remove.other=TRUE,
panel.arrange="grid",
ncol=NULL,
nrow=NULL)
pkgdown::build_site()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(microbiomeutilities)
library(pheatmap)
library(RColorBrewer)
data("zackular2014")
ps0 <- zackular2014
taxa_names(ps0) <- gsub("d__denovo", "OTU:", taxa_names(ps0))
# create a gradient color palette for abundance
grad_ab <- colorRampPalette(c("#faf3dd","#f7d486" ,"#5e6472"))
grad_ab_pal <- grad_ab(10)
# create a gradient color palette for prevalence
gray_grad <- colorRampPalette(c("white", "steelblue"))
gray_grad_cols <- gray_grad(10)
# create a color palette for varaibles of interest
meta_colors <- list(c("positive" = "#FFC857",
"negative" = "#05B083"),
c("CRC" = "steelblue",
"nonCRC" = "grey50",
"H"="brown3"),
gray_grad_cols)
# add labels for pheatmap to detect
names(meta_colors) <- c("FOBT.result", "DiseaseState","Prevalence")
p <- plot_taxa_heatmap(ps0,
subset.top = 25,
VariableA = c("DiseaseState","FOBT.result"),
heatcolors = grad_ab_pal, #rev(brewer.pal(6, "RdPu")),
transformation = "log10",
cluster_rows = T,
cluster_cols = F,
show_colnames = F,
annotation_colors=meta_colors)
prev.tx <- prevalence(p$prevalence)
prev.tx
roxygen2::roxygenize()
library(microbiomeutilities)
pkgdown::build_site()
library(microbiomeutilities)
pkgdown::build_site()
