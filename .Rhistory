.vars = c(sampleids, subject)
)
x1 <- prune_taxa(taxa_sums(x) > 0 , x)
if(dist.method %in% c("pearson", "kendall", "spearman")){
abund_tab <- t(abundances(x1))
matrix_dist <- cor(abund_tab,abund_tab, method= dist.method,use= "na.or.complete")
} else{
matrix_dist <- phyloseq::distance(x1, dist.method)
}
stab_tab <- reshape2::melt(
as.matrix(matrix_dist),
varnames = c("S1", "S2"),
value.name = "plasticity.value") %>%
mutate_if(is.factor, as.character) %>%
left_join(mdata, by = c("S1" = "sampleids")) %>%
left_join(mdata, by = c("S2" = "sampleids"),suffix = c("_1", "_2")) %>%
filter(S1 != S2) %>%
filter(subject_1 == subject_2) %>%
mutate(subject = subject_1) %>%
dplyr::select(-subject_1, -subject_2) %>%
distinct(subject, .keep_all = TRUE) %>%
mutate(stability = 1-plasticity.value)
return(stab_tab)
}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
pl <- plasticity(pseq.rel, dist.method = "pearson", participant.col="subject")
library(microbiome)
library(microbiomeutilities)
library(dplyr)
library(ggpubr)
data(peerj32)
pseq <- peerj32$phyloseq
pseq.rel <- microbiome::transform(pseq, "compositional")
pl <- plasticity(pseq.rel, dist.method = "pearson", participant.col="subject")
head(pl)
pl
x1 <- pseq.rel
dist.method = "pearson"
x1 <- pseq.rel
if(dist.method %in% c("pearson", "kendall", "spearman")){
abund_tab <- t(abundances(x1))
matrix_dist <- cor(abund_tab,abund_tab, method= dist.method,use= "na.or.complete")
} else{
matrix_dist <- phyloseq::distance(x1, dist.method)
}
matrix_dist
abund_tab <- abundances(x1)
matrix_dist <- cor(abund_tab,abund_tab, method= dist.method,use= "na.or.complete")
matrix_dist
#' @title Plasticity
#' @description Calculated difference in microbiota composition for each individual between
#' two timepoints.
#' @details Using a beta diversity metrics or correlation matrix to identify variability in
#' microbiota of an individual. This is useful for instance if one wants to quantiify changes in
#' microbiota before and after a treatment, dietary modulation, antibiotic treatment, etc.
#' @param x \code{\link{phyloseq-class}} object
#' @param dist.method Any of the methods supported by phyloseq::distance or correlation method cor()
#' @param participant.col Column name with participant IDs
#' @return plot
#' @examples
#' library(microbiome)
#' library(microbiomeutilities)
#' library(dplyr)
#' library(ggpubr)
#' data(peerj32)
#' pseq <- peerj32$phyloseq
#' pseq.rel <- microbiome::transform(pseq, "compositional")
#' pl <- plasticity(pseq.rel, participant.col="subject")
#'
#' @references
#' \itemize{
#' \item{}{Grembi, J.A., Nguyen, L.H., Haggerty, T.D. et al. Gut microbiota plasticity is
#' correlated with sustained weight loss on a low-carb or low-fat dietary intervention.
#' Sci Rep 10, 1405 (2020).https://www.nature.com/articles/s41598-020-58000-y
#' }
#' }
#' @export
plasticity <- function(x, dist.method="bray", participant.col){
mdata <- subject <- sampleids <- x1 <- abund_tab <- matrix_dist <-stab_tab <- NULL
subject_2 <- subject_1 <- stability <- plasticity.value  <- NULL
mdata <- meta(x)
mdata$subject <- as.factor(mdata[,participant.col])
mdata$sampleids <- rownames(mdata)
mdata <- mdata %>%
data.frame() %>%
mutate_at(
.funs = as.character,
.vars = c(sampleids, subject)
)
x1 <- prune_taxa(taxa_sums(x) > 0 , x)
#dist.method = "pearson"
#x1 <- pseq.rel
if(dist.method %in% c("pearson", "kendall", "spearman")){
abund_tab <- abundances(x1)
matrix_dist <- cor(abund_tab,abund_tab, method= dist.method,use= "na.or.complete")
} else{
matrix_dist <- phyloseq::distance(x1, dist.method)
}
stab_tab <- reshape2::melt(
as.matrix(matrix_dist),
varnames = c("S1", "S2"),
value.name = "plasticity.value") %>%
mutate_if(is.factor, as.character) %>%
left_join(mdata, by = c("S1" = "sampleids")) %>%
left_join(mdata, by = c("S2" = "sampleids"),suffix = c("_1", "_2")) %>%
filter(S1 != S2) %>%
filter(subject_1 == subject_2) %>%
mutate(subject = subject_1) %>%
dplyr::select(-subject_1, -subject_2) %>%
distinct(subject, .keep_all = TRUE) %>%
mutate(stability = 1-plasticity.value)
return(stab_tab)
}
library(microbiome)
library(microbiomeutilities)
library(dplyr)
library(ggpubr)
data(peerj32)
pseq <- peerj32$phyloseq
pseq.rel <- microbiome::transform(pseq, "compositional")
pl <- plasticity(pseq.rel, dist.method = "pearson", participant.col="subject")
head(pl)
#' pl <- plasticity(pseq.rel, participant.col="subject")
#'
#' @references
#' \itemize{
#' \item{}{Grembi, J.A., Nguyen, L.H., Haggerty, T.D. et al. Gut microbiota plasticity is
#' correlated with sustained weight loss on a low-carb or low-fat dietary intervention.
#' Sci Rep 10, 1405 (2020).https://www.nature.com/articles/s41598-020-58000-y
#' }
#' }
#' @export
plasticity <- function(x, dist.method="bray", participant.col){
mdata <- subject <- sampleids <- x1 <- abund_tab <- matrix_dist <-stab_tab <- NULL
subject_2 <- subject_1 <- stability <- plasticity.value  <- NULL
mdata <- meta(x)
mdata$subject <- as.factor(mdata[,participant.col])
mdata$sampleids <- rownames(mdata)
mdata <- mdata %>%
data.frame() %>%
mutate_at(
.funs = as.character,
.vars = c(sampleids, subject)
)
x1 <- prune_taxa(taxa_sums(x) > 0 , x)
#dist.method = "pearson"
#x1 <- pseq.rel
if(dist.method %in% c("pearson", "kendall", "spearman")){
abund_tab <- abundances(x1)
matrix_dist <- cor(abund_tab,abund_tab, method= dist.method,use= "na.or.complete")
} else{
matrix_dist <- phyloseq::distance(x1, dist.method)
}
stab_tab <- reshape2::melt(
as.matrix(matrix_dist),
varnames = c("S1", "S2"),
value.name = dist.method) %>%
mutate_if(is.factor, as.character) %>%
left_join(mdata, by = c("S1" = "sampleids")) %>%
left_join(mdata, by = c("S2" = "sampleids"),suffix = c("_1", "_2")) %>%
filter(S1 != S2) %>%
filter(subject_1 == subject_2) %>%
mutate(subject = subject_1) %>%
dplyr::select(-subject_1, -subject_2) %>%
distinct(subject, .keep_all = TRUE)
return(stab_tab)
}
library(microbiome)
library(microbiomeutilities)
library(dplyr)
library(ggpubr)
data(peerj32)
pseq <- peerj32$phyloseq
pseq.rel <- microbiome::transform(pseq, "compositional")
pl <- plasticity(pseq.rel, participant.col="subject")
head(pl)
ggplot(pl, aes(group_2,bray)) +
geom_boxplot(aes(fill=group_2), alpha=0.5, na.rm = TRUE) +
geom_jitter(aes(color=group_2), alpha=0.5, size=3, na.rm = TRUE) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
scale_color_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
ggplot(pl, aes(group_2,bray)) +
geom_boxplot(aes(fill=group_2),
alpha=0.5,
na.rm = TRUE, width=0.5) +
geom_jitter(aes(color=group_2), alpha=0.5, size=3, na.rm = TRUE) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
scale_color_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
pl <- plasticity(pseq.rel, dist.method = "pearson", participant.col="subject")
head(pl)
ggplot(pl, aes(group_2,bray)) +
geom_boxplot(aes(fill=group_2),
alpha=0.5,
na.rm = TRUE,
width=0.5) +
geom_jitter(aes(color=group_2),
alpha=0.5,
size=3,
na.rm = TRUE) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
scale_color_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
ggplot(pl, aes(group_2,pearson)) +
geom_boxplot(aes(fill=group_2),
alpha=0.5,
na.rm = TRUE,
width=0.5) +
geom_jitter(aes(color=group_2),
alpha=0.5,
size=3,
na.rm = TRUE) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
scale_color_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
ggplot(pl, aes(group_2,bray)) +
geom_boxplot(aes(fill=group_2),
alpha=0.5,
na.rm = TRUE,
width=0.5) +
geom_jitter(aes(color=group_2),
alpha=0.5,
size=3,
na.rm = TRUE) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
scale_color_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
pl <- plasticity(pseq.rel, dist.method = "bray", participant.col="subject")
head(pl)
ggplot(pl, aes(group_2,bray)) +
geom_boxplot(aes(fill=group_2),
alpha=0.5,
na.rm = TRUE,
width=0.5) +
geom_jitter(aes(color=group_2),
alpha=0.5,
size=3,
na.rm = TRUE) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
scale_color_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
roxygen2::roxygenize()
roxygen2::roxygenize()
devtools::check()
roxygen2::roxygenize()
devtools::check()
pkgdown::build_site()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
data("zackular2014")
p0 <- zackular2014
library(microbiomeutilities)
library(microbiome)
library(knitr)
library(tibble)
library(dplyr)
data("zackular2014")
p0 <- zackular2014
p <- plot_read_distribution(p0, groups = "DiseaseState",
plot.type = "density")
print(p)
pseq <- zackular2014
# check healthy
health_ps <- subset_samples(pseq, DiseaseState=="H")
p_hc <- taxa_distribution(health_ps)
library(microbiomeutilities)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(microbiomeutilities)
library(microbiome)
library(knitr)
library(tibble)
library(dplyr)
data("zackular2014")
p0 <- zackular2014
# reduce size for example
ps0 <- core(ps0, detection = 10, prevalence = 20 / 100)
# reduce size for example
ps0 <- core(p0, detection = 10, prevalence = 20 / 100)
# Add a prefix to taxa labels
ps0.f2 <- format_to_besthit(ps0, prefix = "MyBug-")
kable(head(tax_table(ps0.f2))[3:6])
library(microbiomeutilities)
library(ggpubr)
data("zackular2014")
pseq <- zackular2014
# check healthy
health_ps <- subset_samples(pseq, DiseaseState=="H")
p_hc <- taxa_distribution(health_ps)
# check CRC
crc_ps <- subset_samples(pseq, DiseaseState=="CRC")
p_crc <- taxa_distribution(crc_ps)
ggarrange(p_hc, p_crc, nrow=2, ncol=1)
library(microbiome)
data("zackular2014")
ps0 <- zackular2014
mycols <- c("brown3", "steelblue","grey50")
p <- plot_alpha_diversities(ps0,
type = "dominance",
index.val = "all",
plot.type = "stripchart",
variableA = "DiseaseState",
palette = mycols)
print(p)
comps <- make_pairs(sample_data(ps0)$DiseaseState)
p <- p + stat_compare_means(
comparisons = comps,
label = "p.format",
tip.length = 0.05,
method = "wilcox.test")
p
library(gghalves)
library(microbiomeutilities)
data("zackular2014")
p0 <- zackular2014
mycols <- c("brown3", "steelblue","grey50")
p.m <- plot_diversity_stats(p0, group = "DiseaseState",
index = "diversity_shannon",
group.order = c("H", "CRC", "nonCRC"),
group.colors = mycols,
label.format="p.format",
stats = TRUE)
p.m + ylab("Shannon Diversity") + xlab("")
library(microbiomeutilities)
library(RColorBrewer)
data("zackular2014")
p0 <- zackular2014
ps1 <- format_to_besthit(p0)
#ps1 <- subset_samples(ps1, DiseaseState == "H")
ps1 <- prune_taxa(taxa_sums(ps1) > 0, ps1)
prev.thres <- seq(.05, 1, .05)
det.thres <- 10^seq(log10(1e-4), log10(.2), length = 10)
pseq.rel <- microbiome::transform(ps1, "compositional")
# reduce size for example
pseq.rel <- core(pseq.rel, detection = 0.001, prevalence = 20 / 100)
ord.bray <- ordinate(pseq.rel, "NMDS", "bray")
p <- plot_ordiplot_core(pseq.rel, ord.bray,
prev.thres, det.thres,
min.prevalence = 0.9,
color.opt = "DiseaseState",
shape = NULL, Sample = TRUE)
print(p)
library(microbiome)
library(microbiomeutilities)
library(dplyr)
data("zackular2014")
p0 <- zackular2014
p <- plot_ternary(p0, group="DiseaseState",
abund.thres=0.000001, level= "Class", prev.thres=0.01)
p
library(microbiome)
library(microbiomeutilities)
library(dplyr)
data("zackular2014")
p0 <- zackular2014
p <- plot_ternary(p0, group="DiseaseState",
abund.thres=0.000001, level= "Genus", prev.thres=0.01)
p
library(microbiomeutilities)
library(RColorBrewer)
data("zackular2014")
ps0 <- zackular2014
mycols <- c("brown3", "steelblue", "grey50")
pn <- plot_taxa_boxplot(ps0,
taxonomic.level = "Family",
top.otu = 3,
group = "DiseaseState",
add.violin= FALSE,
title = "Top three family",
keep.other = FALSE,
group.order = c("H","CRC","nonCRC"),
group.colors = mycols,
dot.size = 1)
print(pn + theme_biome_utils())
pn
pn + theme_biome_utils()
library(microbiomeutilities)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(microbiomeutilities)
library(RColorBrewer)
data("zackular2014")
ps0 <- zackular2014
mycols <- c("brown3", "steelblue", "grey50")
pn <- plot_taxa_boxplot(ps0,
taxonomic.level = "Family",
top.otu = 3,
group = "DiseaseState",
add.violin= FALSE,
title = "Top three family",
keep.other = FALSE,
group.order = c("H","CRC","nonCRC"),
group.colors = mycols,
dot.size = 1)
print(pn + theme_biome_utils())
library(microbiome)
library(microbiomeutilities)
library(ggpubr)
data("zackular2014")
p0 <- zackular2014
p0.f <- format_to_besthit(p0)
select.taxa <- c("d__denovo4:Bacteroides", "d__denovo2:Bacteroides")
mycols <- c("brown3", "steelblue", "grey50")
p <- plot_listed_taxa(p0.f, select.taxa,
group= "DiseaseState",
group.order = c("H","CRC","nonCRC"),
group.colors = mycols,
add.violin = TRUE,
violin.opacity = 0.3,
dot.opacity = 0.25,
box.opacity = 0.25,
panel.arrange= "grid")
print(p + ylab("Relative abundance") + scale_y_continuous(labels = scales::percent))
library(microbiome)
library(microbiomeutilities)
library(dplyr)
library(ggpubr)
data(peerj32)
pseq <- peerj32$phyloseq
pseq.rel <- microbiome::transform(pseq, "compositional")
pl <- plasticity(pseq.rel, dist.method = "bray", participant.col="subject")
head(pl)
ggplot(pl, aes(group_2,bray)) +
geom_boxplot(aes(fill=group_2),
alpha=0.5,
na.rm = TRUE,
width=0.5) +
geom_jitter(aes(color=group_2),
alpha=0.5,
size=3,
na.rm = TRUE) +
scale_fill_manual(values = c("#457b9d", "#e63946"))+
scale_color_manual(values = c("#457b9d", "#e63946"))+
stat_compare_means() +
theme_biome_utils()
library(pheatmap)
library(RColorBrewer)
data("zackular2014")
ps0 <- zackular2014
plot_taxa_heatmap(ps0,
subset.top = 20,
VariableA = "DiseaseState",
heatcolors = rev(brewer.pal(6, "Spectral")),
transformation = "clr",
cluster_rows = F,
cluster_cols = F,
show_colnames = F)
library(pheatmap)
library(RColorBrewer)
data("zackular2014")
ps0 <- zackular2014
plot_taxa_heatmap(ps0,
subset.top = 20,
VariableA = "DiseaseState",
heatcolors = rev(brewer.pal(3, "Spectral")),
transformation = "clr",
cluster_rows = F,
cluster_cols = F,
show_colnames = F)
library(pheatmap)
library(RColorBrewer)
data("zackular2014")
ps0 <- zackular2014
plot_taxa_heatmap(ps0,
subset.top = 20,
VariableA = "DiseaseState",
heatcolors = rev(brewer.pal(3, "RdPu")),
transformation = "clr",
cluster_rows = F,
cluster_cols = F,
show_colnames = F)
library(microbiomeutilities)
data("zackular2014")
p0 <- zackular2014
p0.rel <- transform(p0, "compositional")
heat.cols <- c("#a8dadc","#457b9d", "#1d3557")
simple_heatmap(p0.rel,
group.facet = "DiseaseState",
group.order = NULL,
abund.thres = 0.01,
prev.thres = 0.1,
level = "Genus",
scale.color = "log10",
na.fill = "white",
color.fill = heat.cols,
taxa.arrange=TRUE,
remove.other=TRUE,
panel.arrange="grid",
ncol=NULL,
nrow=NULL)
study <- list_microbiome_data(printtab = FALSE)
knitr::kable(study)
file <- system.file("extdata", "microbiomeHD_ref.txt", package = "microbiomeutilities")
reference <- read.table(file, header = T, sep = "\t")
knitr::kable(reference)
pkgdown::build_site()
