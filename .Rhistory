if (method=="mean") {
dist_between <- dist_melt %>%
left_join(ps.meta,
by = c("S2" = "Var2"),
suffix = c("_1", "_2")) %>%
filter(group_var_1 != group_var_2) %>%
mutate(comparison= paste0(group_var_1, " vs ", group_var_2)) %>%
group_by(S2, comparison) %>%
summarise(between.mean.dist=mean(value, na.rm = na.rm))
return(dist_between)
} else if (method=="median") {
dist_between <- dist_melt %>%
left_join(ps.meta,
by = c("S2" = "Var2"),
suffix = c("_1", "_2")) %>%
filter(group_var_1 != group_var_2) %>%
mutate(comparison= paste0(group_var_1, " vs ", group_var_2)) %>%
group_by(S2, comparison) %>%
summarise(between.median.dist=median(value, na.rm = na.rm))
return(dist_between)
}
}
beta_df <- compare_distances(ps,
dist.matrix=ps.dist,
method="mean",
group="DiseaseState",
na.rm=TRUE,
type = "all")
#' @title Compare Distances (Beta-diversity)
#' @description Calculated between and within group distances.
#' @details Provided with \code{\link{phyloseq-class}} object and distance matrix,
#' this wrapper with calculate between and within group distances.
#' @param x \code{\link{phyloseq-class}} object.
#' @param dist.matrix User provided distance matrix. Preferable of class 'dist'.
#' @param method Default= "mean". Either mean or median.
#' @param group Groups to compare distances.
#' @param type Default= "between". Whether to compare distances
#'             'within' or 'between' else `all` comparison are returned groups.
#' @param na.rm Default=TRUE. Will return 'NA' if there are NA values. Sanity check.
#' @examples
#' library(tibble)
#' library(microbiomeutilities)
#' data("zackular2014")
#' ps <- zackular2014
#' ps <- microbiome::transform(ps, "compositional")
#' dist.method= "bray"
#' ps.dist <- distance(ps, "bray")
#' beta_df <- compare_distances(ps,
#'                              dist.matrix=ps.dist,
#'                              method="median",
#'                              group="DiseaseState",
#'                              na.rm=TRUE,
#'                              type="all")
#' head(beta_df)
#'
#' @keywords Analysis
#' @export
compare_distances <- function(x,
dist.matrix,
group=NULL,
method = "mean",
na.rm =TRUE,
type="between"){
S1 <- S2 <-  comparison <- group_var_1 <- group_var_2 <- ps.dist <- value <- NULL
if(is.null(group) | is.na(group) | isFALSE(any(group %in% colnames(meta(x))))){
stop(" Please specify correct 'group' argument")
}
#x <- ps
ps.meta <- get_metadf(x)
ps.meta$group_var <- ps.meta[,group]
dist_melt <- suppressMessages(reshape2::melt(
as.matrix(dist.matrix),
varnames = c("S1", "S2")) %>%
mutate_if(is.factor, as.character) %>%
left_join(ps.meta, by = c("S1" = "Var2")) %>%
filter(S1 != S2))
if (type == "within") {
dist_df <- suppressMessages(calculate_within_dist(dist_melt=dist_melt,
ps.meta=ps.meta,
method=method,
na.rm=na.rm))
#return(dist_df)
} else if (type == "between") {
dist_df <- suppressMessages(calculate_between_dist(dist_melt=dist_melt,
ps.meta=ps.meta,
method=method,
na.rm=na.rm))
#return(dist_df)
} else if (type=="all") {
dist_df1 <- suppressMessages(calculate_within_dist(dist_melt=dist_melt,
ps.meta=ps.meta,
method=method,
na.rm=na.rm))
dist_df2 <- suppressMessages(calculate_between_dist(dist_melt=dist_melt,
ps.meta=ps.meta,
method=method,
na.rm=na.rm))
colnames(dist_df1)[3] <- paste0( method,".distance")
colnames(dist_df2)[3] <- paste0( method,".distance")
dist_df <- bind_rows(dist_df1,dist_df2)
#return(dist_all)
}
return(dist_df)
}
#' @keywords utilities
get_metadf<- function(x){
df <- meta(x) %>%
rownames_to_column("Var2")
}
#' @keywords utilities
calculate_within_dist <- function(dist_melt,
ps.meta,
method,
na.rm){
#group_var_1 <- group_var_2 <- S2 <- comparison <- NULL
if (method=="mean"){
dist_within <- dist_melt %>%
left_join(ps.meta,
by = c("S2" = "Var2"),
suffix = c("_1", "_2")) %>%
filter(group_var_1 == group_var_2) %>%
mutate(comparison= paste0(group_var_1, " vs ", group_var_2)) %>%
group_by(S2, comparison) %>%
summarise(within.mean.dist=mean(value, na.rm = na.rm))
return(dist_within)
} else if (method=="median") {
dist_within <- dist_melt %>%
left_join(ps.meta,
by = c("S2" = "Var2"),
suffix = c("_1", "_2")) %>%
filter(group_var_1 == group_var_2) %>%
mutate(comparison= paste0(group_var_1, " vs ", group_var_2)) %>%
group_by(S2, comparison) %>%
summarise(within.median.dist=median(value, na.rm = na.rm))
return(dist_within)
}
}
#' @keywords utilities
calculate_between_dist <- function(dist_melt,
ps.meta,
method,
na.rm){
#group_var_1 <- group_var_2 <- S2 <- comparison <- value <- NULL
if (method=="mean") {
dist_between <- dist_melt %>%
left_join(ps.meta,
by = c("S2" = "Var2"),
suffix = c("_1", "_2")) %>%
filter(group_var_1 != group_var_2) %>%
mutate(comparison= paste0(group_var_1, " vs ", group_var_2)) %>%
group_by(S2, comparison) %>%
summarise(between.mean.dist=mean(value, na.rm = na.rm))
return(dist_between)
} else if (method=="median") {
dist_between <- dist_melt %>%
left_join(ps.meta,
by = c("S2" = "Var2"),
suffix = c("_1", "_2")) %>%
filter(group_var_1 != group_var_2) %>%
mutate(comparison= paste0(group_var_1, " vs ", group_var_2)) %>%
group_by(S2, comparison) %>%
summarise(between.median.dist=median(value, na.rm = na.rm))
return(dist_between)
}
}
beta_df <- compare_distances(ps,
dist.matrix=ps.dist,
method="mean",
group="DiseaseState",
na.rm=TRUE,
type = "all")
beta_df <- compare_distances(ps,
dist.matrix=ps.dist,
method="median",
group="DiseaseState",
na.rm=TRUE,
type = "all")
ggplot(beta_df) +
geom_boxplot(aes(comparison, mean.distance))+
geom_jitter(aes(comparison, mean.distance), alpha=0.25, width = 0.1) +
theme_biome_utils() +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Mean Bray-Curtis Dissimilarity") + xlab("") + coord_flip()
beta_df
ggplot(beta_df) +
geom_boxplot(aes(comparison, median.distance))+
geom_jitter(aes(comparison, median.distance), alpha=0.25, width = 0.1) +
theme_biome_utils() +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") + xlab("") + coord_flip()
library(phyloseq)
?get_sample()
?get_sample
?get_variable
# we have three groups
# H/nonCRC/CRC
h.samples <- sample(sample_names(subset_samples(ps,
DiseaseState == "H")),
size = 25)
h.samples
noncrc.samples <- sample(sample_names(subset_samples(ps,
DiseaseState == "nonCRC")),
size = 25)
crc.samples <- sample(sample_names(subset_samples(ps,
DiseaseState == "CRC")),
size = 25)
ps.sampled <- prune_samples(c(h.samples,noncrc.samples,crc.samples), ps)
ps.sampled
ps.dist <- distance(ps.sampled, "bray")
beta_df <- compare_distances(ps.sampled,
dist.matrix=ps.dist,
method="median",
group="DiseaseState",
na.rm=TRUE,
type = "all")
ggplot(beta_df) +
geom_boxplot(aes(comparison, median.distance))+
geom_jitter(aes(comparison, median.distance), alpha=0.25, width = 0.1) +
theme_biome_utils() +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") + xlab("") + coord_flip()
View(iris)
beta_df %>%
group_by(comparison) %>%
summarize(
#mean = mean(Sepal.Length),
count = n())
beta_df <- compare_distances(ps.sampled,
dist.matrix=ps.dist,
method="median",
group="DiseaseState",
na.rm=TRUE,
type = "between")
view(beta_df)
ggplot(beta_df) +
geom_boxplot(aes(comparison, median.distance))+
geom_jitter(aes(comparison, median.distance), alpha=0.25, width = 0.1) +
theme_biome_utils() +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") + coord_flip()
beta_df <- compare_distances(ps.sampled,
dist.matrix=ps.dist,
method="median",
group="DiseaseState",
na.rm=TRUE,
type = "between")
beta_df
ggplot(beta_df) +
geom_boxplot(aes(comparison, between.median.dist))+
geom_jitter(aes(comparison, between.median.dist), alpha=0.25, width = 0.1) +
theme_biome_utils() +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") + coord_flip()
ggplot(beta_df) +
geom_boxplot(aes(comparison, between.median.dist), width=1
)+
geom_jitter(aes(comparison, between.median.dist), alpha=0.25, width = 0.1) +
theme_biome_utils() +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") + coord_flip()
ggplot(beta_df) +
geom_boxplot(aes(comparison, between.median.dist), width=0.5
)+
geom_jitter(aes(comparison, between.median.dist), alpha=0.25, width = 0.1) +
theme_biome_utils() +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") + coord_flip()
p <- ggplot(beta_df) +
geom_boxplot(aes(comparison, between.median.dist), width=0.5
)+
geom_jitter(aes(comparison, between.median.dist), alpha=0.25, width = 0.1) +
theme_biome_utils() +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") + coord_flip()
counts_grp <- beta_df %>%
group_by(comparison) %>%
summarize(
#mean = mean(Sepal.Length),
count = n())
p <- p + geom_text(data = counts_grp, aes(label=count),
position=position_dodge(width=1.0))
p
p <- ggplot(beta_df, aes(comparison, between.median.dist)) +
geom_boxplot(width=0.5)+
geom_jitter(aes(comparison, between.median.dist), alpha=0.25, width = 0.1) +
theme_biome_utils() +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") + coord_flip()
p
p <- p + geom_text(data = counts_grp, aes(label=count),
position=position_dodge(width=1.0))
p
counts_grp
counts_grp <- beta_df %>%
group_by(comparison) %>%
summarize(
#mean = mean(Sepal.Length),
count = n())
p <- p + geom_text(data = counts_grp, aes(label=count),
position=position_dodge(width=1.0))
p
beta_df
counts_grp <- beta_df %>%
group_by(comparison) %>%
summarize(
#mean = mean(Sepal.Length),
count = n(),
max=max(between.median.dist))
counts_grp
p +geom_text(aes(y = max,label = count),vjust = 0)
p <- ggplot(beta_df, aes(comparison, between.median.dist)) +
geom_boxplot(width=0.5)+
geom_jitter(aes(comparison, between.median.dist), alpha=0.25, width = 0.1) +
theme_biome_utils() +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") + coord_flip()
p
p + geom_text(aes(x = max,label = count),vjust = 0)
p + geom_text(aes(y = max,label = count),vjust = 0)
p$mapping
p <- ggplot(beta_df, aes(comparison, between.median.dist)) +
geom_boxplot(width=0.5)+
geom_jitter(aes(comparison, between.median.dist), alpha=0.25, width = 0.1) +
theme_biome_utils() + geom_text(aes(y = max,label = count),vjust = 0) +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") + coord_flip()
p
p <- ggplot(beta_df, aes(comparison, between.median.dist)) +
geom_boxplot(width=0.5)+
geom_jitter(aes(comparison, between.median.dist), alpha=0.25, width = 0.1) +
theme_biome_utils() +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") + coord_flip()
p
p + geom_text(data = counts_grp, data = df, aes(y = 0, label = count))
p + geom_text(data = counts_grp, aes(y = 0, label = count))
p + geom_text(data = counts_grp, aes(y = max(max), label = count))
counts_grp <- beta_df %>%
group_by(comparison) %>%
summarize(
#mean = mean(Sepal.Length),
count = n(),
min.y=min(between.median.dist))
p + geom_text(data = counts_grp, aes(y = min(min.y), label = count))
p + geom_text(data = counts_grp, aes(y = min(min.y + 0.1), label = count))
counts_grp <- beta_df %>%
group_by(comparison) %>%
summarize(
#mean = mean(Sepal.Length),
count = n(),
min.y=min(between.median.dist))
p + geom_text(data = counts_grp, aes(y = min(min.y - 0.1), label = count))
p + geom_text(data = counts_grp, aes(y = min(min.y - 0.05), label = count))
#plot
p <- ggplot(beta_df, aes(comparison, between.median.dist)) +
geom_boxplot(width=0.5)+
geom_jitter(aes(comparison, between.median.dist), alpha=0.25, width = 0.1) +
theme_biome_utils() + geom_text(data = counts_grp, aes(y = min(min.y - 0.05), label = count)) +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") + coord_flip()
p
#plot
p <- ggplot(beta_df, aes(comparison, between.median.dist)) +
geom_boxplot(width=0.5)+
geom_jitter(aes(comparison, between.median.dist), alpha=0.25, width = 0.1) +
theme_biome_utils() +
geom_text(data = counts_grp,
aes(y = min(min.y - 0.05), label = paste0("n= ", count))) +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") + coord_flip()
p
#plot
p <- ggplot(beta_df, aes(comparison, between.median.dist)) +
geom_boxplot(width=0.5)+
geom_jitter(aes(comparison, between.median.dist), alpha=0.25, width = 0.1) +
theme_biome_utils() +
geom_text(data = counts_grp,
aes(y = min(min.y), label = paste0("n= ", count))) +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") + coord_flip()
p
p <- ggplot(beta_df, aes(comparison, between.median.dist)) +
geom_boxplot(width=0.5)+
geom_jitter(aes(comparison, between.median.dist), alpha=0.25, width = 0.1) +
theme_biome_utils() +
geom_text(data = counts_grp,
aes(y = min(min.y+0.02), label = paste0("n= ", count))) +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") + coord_flip()
p
#plot
p <- ggplot(beta_df, aes(comparison, between.median.dist)) +
geom_boxplot(width=0.5)+
geom_jitter(aes(comparison, between.median.dist), alpha=0.25, width = 0.1) +
theme_biome_utils() +
geom_text(data = counts_grp,
aes(y = min(min.y+0.02), label = paste0("n= ", count))) +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") #+ coord_flip()
p
p <- ggplot(beta_df, aes(comparison, between.median.dist)) +
geom_boxplot(width=0.5)+
geom_jitter(aes(comparison, between.median.dist), alpha=0.25, width = 0.1) +
theme_biome_utils() +
ylim(0.6,0.90)
geom_text(data = counts_grp,
aes(y = 0.65, label = paste0("n= ", count))) +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") #+ coord_flip()
p <- ggplot(beta_df, aes(comparison, between.median.dist)) +
geom_boxplot(width=0.5)+
geom_jitter(aes(comparison, between.median.dist), alpha=0.25, width = 0.1) +
theme_biome_utils() +
ylim(0.6,0.90) +
geom_text(data = counts_grp,
aes(y = 0.65, label = paste0("n= ", count))) +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") #+ coord_flip()
p
p
beta_df <- compare_distances(ps.sampled,
dist.matrix=ps.dist,
method="median",
group="DiseaseState",
na.rm=TRUE,
type = "all")
# create counts summary
counts_grp <- beta_df %>%
group_by(comparison) %>%
summarize(
#mean = mean(Sepal.Length),
count = n(),
min.y=min(between.median.dist))
beta_df
# create counts summary
counts_grp <- beta_df %>%
group_by(comparison) %>%
summarize(
#mean = mean(Sepal.Length),
count = n(),
min.y=min(median.distance))
#plot
p <- ggplot(beta_df, aes(comparison, median.distance)) +
geom_boxplot(width=0.5)+
geom_jitter(aes(comparison, median.distance), alpha=0.25, width = 0.1) +
theme_biome_utils() +
ylim(0.6,0.90) +
geom_text(data = counts_grp,
aes(y = 0.65, label = paste0("n= ", count))) +
#theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") #+ coord_flip()
p
p <- ggplot(beta_df, aes(comparison, median.distance)) +
geom_boxplot(width=0.5)+
geom_jitter(aes(comparison, median.distance), alpha=0.25, width = 0.1) +
theme_biome_utils() +
ylim(0.6,0.90) +
geom_text(data = counts_grp,
aes(y = 0.65, label = paste0("n= ", count))) +
theme(axis.text.x = element_text(angle=90, hjust = 0.9)) +
ylab("Median Bray-Curtis Dissimilarity") +
xlab("") #+ coord_flip()
p
roxygen2::roxygenize()
devtools::check()
roxygen2::roxygenize()
devtools::check()
pkgdown::build_site()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(microbiome)
library(microbiomeutilities)
library(dplyr)
data("zackular2014")
p0 <- zackular2014
tern_df <- prep_ternary(p0, group="DiseaseState",
abund.thres=0.000001, level= "Genus", prev.thres=0.01)
head(tern_df)
require(ggtern)
# Replace empty with Other
tern_df$Phylum[tern_df$Phylum==""] <- "Other"
ggtern(data=tern_df, aes(x=CRC, y=H, z=nonCRC)) +
geom_point(aes(color= Phylum),
alpha=0.25,
show.legend=T,
size=3) +
#scale_size(range=c(0, 6)) +
geom_mask() +
scale_colour_brewer(palette = "Paired") +
theme_biome_utils()
detach("package:ggtern", unload=TRUE)
pkgdown::build_site()
pkgdown::build_site()
