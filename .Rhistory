as.numeric(med.rel),
as.numeric(std.dev)))
}
output=NULL
for(j in 1:nrow(otudf2)){
x2=as.numeric(otudf2[j,])
mx.rel=max(x2)
mean.rel=mean(x2)
med.rel=median(x2)
std.dev=sd(x2)
output=rbind(output,c(row.names(otudf2)[j],
as.numeric(mx.rel),
as.numeric(mean.rel),
as.numeric(med.rel),
as.numeric(std.dev)))
}
outputdf <- as.data.frame(output, stringsAsFactors = F)
colnames(outputdf) <- c("Taxa", "Max.Rel.Ab", "Mean.Rel.Ab", "Median.Rel.Ab", "Std.dev")
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) + geom_point()
str(outputdf)
head(output)
outputdf <- as.data.frame(output, stringsAsFactors = F)
colnames(outputdf) <- c("Taxa", "Max.Rel.Ab", "Mean.Rel.Ab", "Median.Rel.Ab", "Std.dev")
library(dplyr)
outputdf <- outputdf %>%
mutate_at(vars(Max.Rel.Ab, Mean.Rel.Ab, Median.Rel.Ab, Std.dev ), as.numeric)
str(outputdf)
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) + geom_point()
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point() +
scale_x_log10() +
scale_y_log10()
dist_mat=as.matrix(dist(cbind(outputdf$Mean.Rel.Ab, outputdf$Std.dev)), method="manhattan");
max_dist=max(dist_mat);
num_valid
max_dist
dist_mat=dist_mat+diag(max_dist,nrow(output));
min_dist=apply(dist_mat, 1, min);
mean_prop
Mean.Rel.Ab
outputdf$Mean.Rel.Ab
label_ix=(min_dist>.07 & mean_prop>0.0001) | (mean_prop > 0.001)
label_ix=(min_dist>.07 & outputdf$Mean.Rel.Ab>0.0001) | (outputdf$Mean.Rel.Ab > 0.001)
label_ix
min_dist
outputdf
cols(outputdf)
colnames(outputdf)
prev_df <- as.data.frame(pr)
prev_df$Taxa <- rownames(prev_df)
str(prev_df)
str(outputdf)
prev_abund <- prev_df %>%
left_join(outputdf, by="Taxa")
str(outputdf)
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=)) +
scale_x_log10() +
scale_y_log10()
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr)) +
scale_x_log10() +
scale_y_log10()
asv_ps <- microbiome::transform(asv_ps, "compositional")
pr <- prevalence(asv_ps, detection=0, sort=TRUE, count=F)
otudf2 <- as.data.frame(abundances(asv_ps, "log10"))
output=NULL
for(j in 1:nrow(otudf2)){
x2=as.numeric(otudf2[j,])
mx.rel=max(x2)
mean.rel=mean(x2)
med.rel=median(x2)
std.dev=sd(x2)
output=rbind(output,c(row.names(otudf2)[j],
as.numeric(mx.rel),
as.numeric(mean.rel),
as.numeric(med.rel),
as.numeric(std.dev)))
}
head(output)
outputdf <- as.data.frame(output, stringsAsFactors = F)
colnames(outputdf) <- c("Taxa", "Max.Rel.Ab", "Mean.Rel.Ab", "Median.Rel.Ab", "Std.dev")
library(dplyr)
outputdf <- outputdf %>%
mutate_at(vars(Max.Rel.Ab, Mean.Rel.Ab, Median.Rel.Ab, Std.dev ), as.numeric)
prev_df <- as.data.frame(pr)
prev_df$Taxa <- rownames(prev_df)
str(prev_df)
str(outputdf)
prev_abund <- prev_df %>%
left_join(outputdf, by="Taxa")
str(outputdf)
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr)) +
scale_x_log10() +
scale_y_log10()
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr))
asv_ps <- microbiome::transform(asv_ps, "compositional")
pr <- prevalence(asv_ps, detection=0, sort=TRUE, count=F)
otudf2 <- as.data.frame(abundances(asv_ps, "log10"))
otudf2
otudf2 <- as.data.frame(abundances(asv_ps, "clr"))
otudf2
output=NULL
for(j in 1:nrow(otudf2)){
x2=as.numeric(otudf2[j,])
mx.rel=max(x2)
mean.rel=mean(x2)
med.rel=median(x2)
std.dev=sd(x2)
output=rbind(output,c(row.names(otudf2)[j],
as.numeric(mx.rel),
as.numeric(mean.rel),
as.numeric(med.rel),
as.numeric(std.dev)))
}
head(output)
outputdf <- as.data.frame(output, stringsAsFactors = F)
colnames(outputdf) <- c("Taxa", "Max.Rel.Ab", "Mean.Rel.Ab", "Median.Rel.Ab", "Std.dev")
library(dplyr)
outputdf <- outputdf %>%
mutate_at(vars(Max.Rel.Ab, Mean.Rel.Ab, Median.Rel.Ab, Std.dev ), as.numeric)
prev_df <- as.data.frame(pr)
prev_df$Taxa <- rownames(prev_df)
str(prev_df)
str(outputdf)
prev_abund <- prev_df %>%
left_join(outputdf, by="Taxa")
str(outputdf)
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr))
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr)) +
scale_x_log10() +
scale_y_log10()
dist_mat
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)")
asv_ps <-subset_samples(moving_pictures, host_subject_id=="M3" &
sample_type=="stool")
asv_ps <- prune_samples(sample_sums(asv_ps) >500, asv_ps)
asv_ps <- prune_taxa(taxa_sums(asv_ps) >0, asv_ps)
asv_ps <- aggregate_taxa(asv_ps, "Genus")
#cat("Num Taxa: ", num_taxa, "\n");
#cat("Num Samples: ", num_samples, "\n");
#print(st);
# Normalize counts
#nst=normalize(st);
#print(nst);
asv_ps <- microbiome::transform(asv_ps, "compositional")
pr <- prevalence(asv_ps, detection=0.0001, sort=TRUE, count=F)
otudf2 <- as.data.frame(abundances(asv_ps, "clr"))
output=NULL
for(j in 1:nrow(otudf2)){
x2=as.numeric(otudf2[j,])
mx.rel=max(x2)
mean.rel=mean(x2)
med.rel=median(x2)
std.dev=sd(x2)
output=rbind(output,c(row.names(otudf2)[j],
as.numeric(mx.rel),
as.numeric(mean.rel),
as.numeric(med.rel),
as.numeric(std.dev)))
}
head(output)
outputdf <- as.data.frame(output, stringsAsFactors = F)
colnames(outputdf) <- c("Taxa", "Max.Rel.Ab", "Mean.Rel.Ab", "Median.Rel.Ab", "Std.dev")
library(dplyr)
outputdf <- outputdf %>%
mutate_at(vars(Max.Rel.Ab, Mean.Rel.Ab, Median.Rel.Ab, Std.dev ), as.numeric)
prev_df <- as.data.frame(pr)
prev_df$Taxa <- rownames(prev_df)
str(prev_df)
str(outputdf)
prev_abund <- prev_df %>%
left_join(outputdf, by="Taxa")
str(outputdf)
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)")
asv_ps <-subset_samples(moving_pictures, host_subject_id=="M3" &
sample_type=="stool")
asv_ps <- prune_samples(sample_sums(asv_ps) >500, asv_ps)
asv_ps <- prune_taxa(taxa_sums(asv_ps) >0, asv_ps)
asv_ps <- aggregate_taxa(asv_ps, "Genus")
#cat("Num Taxa: ", num_taxa, "\n");
#cat("Num Samples: ", num_samples, "\n");
#print(st);
# Normalize counts
#nst=normalize(st);
#print(nst);
asv_ps <- microbiome::transform(asv_ps, "compositional")
asv_ps <- prune_taxa(taxa_sums(asv_ps) >0.00001, asv_ps)
asv_ps
pr <- prevalence(asv_ps, detection=0, sort=TRUE, count=F)
otudf2 <- as.data.frame(abundances(asv_ps, "clr"))
pr
pr <- prevalence(asv_ps, detection=0, sort=TRUE, count=F)
otudf2 <- as.data.frame(abundances(asv_ps, "clr"))
output=NULL
for(j in 1:nrow(otudf2)){
x2=as.numeric(otudf2[j,])
mx.rel=max(x2)
mean.rel=mean(x2)
med.rel=median(x2)
std.dev=sd(x2)
output=rbind(output,c(row.names(otudf2)[j],
as.numeric(mx.rel),
as.numeric(mean.rel),
as.numeric(med.rel),
as.numeric(std.dev)))
}
head(output)
outputdf <- as.data.frame(output, stringsAsFactors = F)
colnames(outputdf) <- c("Taxa", "Max.Rel.Ab", "Mean.Rel.Ab", "Median.Rel.Ab", "Std.dev")
library(dplyr)
outputdf <- outputdf %>%
mutate_at(vars(Max.Rel.Ab, Mean.Rel.Ab, Median.Rel.Ab, Std.dev ), as.numeric)
prev_df <- as.data.frame(pr)
prev_df$Taxa <- rownames(prev_df)
str(prev_df)
str(outputdf)
prev_abund <- prev_df %>%
left_join(outputdf, by="Taxa")
str(outputdf)
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)")
head(prev_abund)
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)") +
ggrepel::geom_text_repel(data=subset(prev_abund,
Mean.Rel.Ab=> -3 & Std.dev =<0.25),
label(aes(Taxa)))
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)") +
ggrepel::geom_text_repel(data=subset(prev_abund,
Mean.Rel.Ab=> -3 & Std.dev =<0.25),
label(aes(Taxa)))
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)") +
ggrepel::geom_text_repel(data=subset(prev_abund,
Mean.Rel.Ab >= -3 & Std.dev <= 0.25),
label(aes(Taxa)))
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)") +
ggrepel::geom_text_repel(data=subset(prev_abund,
Mean.Rel.Ab >= -3 & Std.dev <= 0.25),
aes(label=Taxa))
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)") +
ggrepel::geom_text_repel(data=subset(prev_abund,
Mean.Rel.Ab >= 3 & Std.dev <= 0.25),
aes(label=Taxa))
hist(prev_abund$Mean.Rel.Ab)
hist(prev_abund$Std.dev)
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)") +
ggrepel::geom_text_repel(data=subset(prev_abund,
Mean.Rel.Ab >= 2 | Std.dev <= 0.25),
aes(label=Taxa))
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)") +
ggrepel::geom_text_repel(data=subset(prev_abund,
Mean.Rel.Ab >= 2 & Std.dev <= 0.25),
aes(label=Taxa))
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)") +
ggrepel::geom_text_repel(data=subset(prev_abund,
Mean.Rel.Ab >= 1 & Std.dev <= 0.25),
aes(label=Taxa))
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)") +
ggrepel::geom_text_repel(data=subset(prev_abund,
Mean.Rel.Ab >= 4 & Std.dev <= 0.25),
aes(label=Taxa))
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)") +
ggrepel::geom_text_repel(data=subset(prev_abund,
Mean.Rel.Ab >= -2 & Std.dev <= 0.25),
aes(label=Taxa))
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)") +
ggrepel::geom_text_repel(data=subset(prev_abund,
Mean.Rel.Ab >= 3 & Std.dev <= 0.20),
aes(label=Taxa))
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)") +
ggrepel::geom_text_repel(data=subset(prev_abund,
Mean.Rel.Ab >= 3 & Std.dev <= 1.5),
aes(label=Taxa))
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)") +
ggrepel::geom_text_repel(data=subset(prev_abund,
Mean.Rel.Ab >= 3 & Std.dev <= 1.5),
aes(label=Taxa))+
theme_bw()
asv_ps <-subset_samples(moving_pictures, host_subject_id=="M3" &
sample_type=="stool")
asv_ps <- prune_samples(sample_sums(asv_ps) >500, asv_ps)
asv_ps <- prune_taxa(taxa_sums(asv_ps) >0, asv_ps)
asv_ps <- aggregate_taxa(asv_ps, "Genus")
#cat("Num Taxa: ", num_taxa, "\n");
#cat("Num Samples: ", num_samples, "\n");
#print(st);
# Normalize counts
#nst=normalize(st);
#print(nst);
asv_ps <- microbiome::transform(asv_ps, "compositional")
asv_ps
asv_ps <- prune_taxa(taxa_sums(asv_ps) >=0.00001, asv_ps)
asv_ps
asv_ps <- prune_taxa(taxa_sums(asv_ps) >=0.0001, asv_ps)
asv_ps
asv_ps <- prune_taxa(taxa_sums(asv_ps) >=0.01, asv_ps)
asv_ps
pr <- prevalence(asv_ps, detection=0, sort=TRUE, count=F)
otudf2 <- as.data.frame(abundances(asv_ps, "clr"))
output=NULL
for(j in 1:nrow(otudf2)){
x2=as.numeric(otudf2[j,])
mx.rel=max(x2)
mean.rel=mean(x2)
med.rel=median(x2)
std.dev=sd(x2)
output=rbind(output,c(row.names(otudf2)[j],
as.numeric(mx.rel),
as.numeric(mean.rel),
as.numeric(med.rel),
as.numeric(std.dev)))
}
head(output)
outputdf <- as.data.frame(output, stringsAsFactors = F)
colnames(outputdf) <- c("Taxa", "Max.Rel.Ab", "Mean.Rel.Ab", "Median.Rel.Ab", "Std.dev")
library(dplyr)
outputdf <- outputdf %>%
mutate_at(vars(Max.Rel.Ab, Mean.Rel.Ab, Median.Rel.Ab, Std.dev ), as.numeric)
prev_df <- as.data.frame(pr)
prev_df$Taxa <- rownames(prev_df)
str(prev_df)
str(outputdf)
prev_abund <- prev_df %>%
left_join(outputdf, by="Taxa")
str(outputdf)
ggplot(outputdf, aes(Mean.Rel.Ab, Std.dev)) +
geom_point(aes(size=pr), alpha=0.5) +
xlab("Mean abundance (clr)")+
ylab("Std dev abundance (clr)") +
ggrepel::geom_text_repel(data=subset(prev_abund,
Mean.Rel.Ab >= 3 & Std.dev <= 1.5),
aes(label=Taxa))+
theme_bw()
otudf.pv <- as.data.frame(abundances(asv_ps, "compositional"))
otudf.pv
##################3
PV <- function (Z){
n = length(Z)
pairs = combn(Z,2)
min_z = apply(pairs,2, min)
max_z = apply(pairs,2, max)
z = 1- (min_z/max_z)
PV=2*sum(z)/(n*(n-1))
return(PV)
}
pv.c <- PV(otudf.pv)
pv_df
for(j in 1:nrow(otudf2)) {
pv_df[j] <- PV(j)
}
otudf2
pv_df <- NULL
for(j in 1:nrow(otudf2)) {
pv_df[j] <- PV(pv_df[j,])
}
pv_df <- NULL
for(j in 1:nrow(otudf.pv)) {
pv_df[j] <- PV(pv_df[j,])
}
otudf.pv[1,]
num_taxa
for(j in 1:num_taxa) {
pv_df[j] <- PV(pv_df[j,])
}
?combn
pairs = combn(pv_df[1,],2)
pv_df[1,]
pairs = combn(otudf.pv[1,],2)
pairs
pv_df <- NULL
for(j in 1:num_taxa) {
pv_df[j] <- PV(otudf.pv[j,])
}
for(j in 1:num_taxa) {
pv_df[j,] <- PV(otudf.pv[j,])
}
#pairs = combn(otudf.pv[1,],2)
pv_df <- NULL
for(j in 1:num_taxa) {
pv_val <- PV(otudf.pv[j,])
pv_df=rbind(pv_df,c(row.names(otudf.pv)[j],pv_val)
}
for(j in 1:num_taxa) {
pv_val <- PV(otudf.pv[j,])
pv_df=rbind(pv_df,c(row.names(otudf.pv)[j],pv_val))
}
D  <- function(P){
n = length(P)
flixbus <- NA
for(i in (1: (n-1))){
flixbus[i]=abs(log(P[i+1]/P[i]))
}
D=sum(flixbus)/(n-1)
return(D)
}
pv_df <- NULL
for(j in 1:num_taxa) {
pv_val <- D(otudf.pv[j,])
pv_df=rbind(pv_df,c(row.names(otudf.pv)[j],pv_val))
}
pv_df <- NULL
for(j in 1:num_taxa) {
pv_val <- D(otudf.pv[j,])
pv_df=rbind(pv_df,c(row.names(otudf.pv)[j],pv_val))
}
DC <- D(otudf.pv[1,])
tudf.pv[1,]
otudf.pv[1,]
length(otudf.pv[1,])
otudf.pv[1,]
#length(otudf.pv[1,])
DC <- D(t(otudf.pv[,1]))
DC
#length(otudf.pv[1,])
DC <- D(t(otudf.pv[,1] + .1))
DC
for(j in 1:num_taxa) {
pv_df <- NULL
for(j in 1:num_taxa) {
pv_val <- D(t(otudf.pv[,j] + .1))
pv_df=rbind(pv_df,c(row.names(otudf.pv)[j],pv_val))
}
for(j in 1:ncol(otudf.pv)) {
pv_val <- D(t(otudf.pv[,j] + .1))
pv_df=rbind(pv_df,c(row.names(otudf.pv)[j],pv_val))
}
>>>
for(j in 1:ncol(otudf.pv)) {
pv_val <- D(t(otudf.pv[,j] + .1))
pv_df=rbind(pv_df,c(row.names(otudf.pv)[j],pv_val))
}
pv_df
head(pv_df)
for(j in 1:ncol(otudf.pv)) {
pv_val <- D(t(otudf.pv[,j] + .1))
pv_df=cbind(pv_df,c(row.names(otudf.pv)[j],pv_val))
}
head(pv_df)
for(j in 1:ncol(otudf.pv)) {
pv_val <- D(t(otudf.pv[,j] + .1))
pv_df=cbind(pv_df,c(colnames(otudf.pv)[j],pv_val))
}
head(pv_df)
rownames(pv_df) <- row.names(otudf.pv)
for(j in 1:ncol(otudf.pv)) {
pv_val <- D(t(otudf.pv[,j] + .1))
pv_df=cbind(pv_df,c(row.names(otudf.pv)[j],pv_val))
}
head(pv_df)
pv_df <- NULL
#rownames(pv_df) <- row.names(otudf.pv)
for(j in 1:ncol(otudf.pv)) {
pv_val <- D(t(otudf.pv[,j] + .1))
pv_df=rbind(pv_df,c(row.names(otudf.pv)[j],pv_val))
}
head(pv_df)
pv_df <- as.data.frame(pv_df)
head(pv_df)
syncomR::taxa_time_table
library(microbiomeutilities)
roxygen2::roxygenize() #Documentation
